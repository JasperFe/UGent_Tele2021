{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Over deze cursussite Over deze cursus Welkom bij de cursussite voor de practica van Teledetectie 2022. Deze cursus is ontworpen om studenten te basis aan te leren voor het verkrijgen, voorverwerken, analyseren en exporteren van remote sensing data. Volgende topics komen doorheen de 5 practica's aan bod: Practicum 1 : Downloaden en beeldinterpretatie Practicum 2 : Intro Google Earth Engine Practicum 3 : Feature extractie Practicum 4 : Beeldclassificatie Practicum 5 : Tijdserieanalyse Practicum 6 : Intro tot Synthetic Apperture Radar (SAR) Deze cursussite laat toe om snel stukken scripts te kopi\u00ebren, om zo vlotte gang van zaken mogelijk te maken. In een 'tutorial' leer je bepaalde functionaliteit kennen door het copy-pasten van de voorbeeldscripts. In de hierop volgende oefeningen zul je zelf de gebruikte tools moeten toepassen. Doorheen de practica wordt deze site aangevuld met nieuwe documentatie, extra informatie en FAQ's. Afrukbare PDF's Afdrukbare pdf's per practicum worden voorzien, voor wie hieraan de voorkeur geeft. De PDF-versie van de volledige practicasite is te vinden via deze link . Remote Sensing | Spatial Analysis lab (REMOSA)","title":"Over deze cursussite"},{"location":"index.html#over-deze-cursussite","text":"","title":"Over deze cursussite"},{"location":"index.html#over-deze-cursus","text":"Welkom bij de cursussite voor de practica van Teledetectie 2022. Deze cursus is ontworpen om studenten te basis aan te leren voor het verkrijgen, voorverwerken, analyseren en exporteren van remote sensing data. Volgende topics komen doorheen de 5 practica's aan bod: Practicum 1 : Downloaden en beeldinterpretatie Practicum 2 : Intro Google Earth Engine Practicum 3 : Feature extractie Practicum 4 : Beeldclassificatie Practicum 5 : Tijdserieanalyse Practicum 6 : Intro tot Synthetic Apperture Radar (SAR) Deze cursussite laat toe om snel stukken scripts te kopi\u00ebren, om zo vlotte gang van zaken mogelijk te maken. In een 'tutorial' leer je bepaalde functionaliteit kennen door het copy-pasten van de voorbeeldscripts. In de hierop volgende oefeningen zul je zelf de gebruikte tools moeten toepassen. Doorheen de practica wordt deze site aangevuld met nieuwe documentatie, extra informatie en FAQ's.","title":"Over deze cursus"},{"location":"index.html#afrukbare-pdfs","text":"Afdrukbare pdf's per practicum worden voorzien, voor wie hieraan de voorkeur geeft. De PDF-versie van de volledige practicasite is te vinden via deze link . Remote Sensing | Spatial Analysis lab (REMOSA)","title":"Afrukbare PDF's"},{"location":"Afdrukbare_pdfs.html","text":"Afdrukbare PDF's Afdrukbare pdf's per practicum worden voorzien, voor wie hieraan de voorkeur geeft. De PDF-versie van de volledige practicasite is te vinden via deze link .","title":"Afdrukbare PDF's"},{"location":"Afdrukbare_pdfs.html#afdrukbare-pdfs","text":"Afdrukbare pdf's per practicum worden voorzien, voor wie hieraan de voorkeur geeft. De PDF-versie van de volledige practicasite is te vinden via deze link .","title":"Afdrukbare PDF's"},{"location":"Extra_info.html","text":"Extra Info","title":"Extra Info"},{"location":"Extra_info.html#extra-info","text":"","title":"Extra Info"},{"location":"Oefeningen/Oef1_Roermond.html","text":"Gegeven : startscript met ROI met uit te voeren stappen Link: https://code.earthengine.google.com/7e9d4703332801ad0fee89d546cf1863 Gevraagd : Visualisatie van het overstromingsgebied op 18/07/2021 (overstromingen) in vergelijking met toestand op 16/06/2021 (voor overstromingen) Tips: Maak gebruik van de MNDWI-index voor een eenvoudig onderscheid tussen water en land. MNDWI formule ( Xu, 2005 ): \\[MNDWI = { GREEN - SWIR 1 \\over GREEN + SWIR 1}.\\] Zoek naar de geschikte MNDWI-waarden om water af te scheiden van de andere gebieden (= \" tresholding \") Maak gebruik van de .updateMask() -functie Over .updateMask De updateMask-functie maskeert een beeld, waar het 'mask'-beeld gelijk is aan 0 (m.a.w. gebruik je een binair beeld als 'mask', dan houdt je alle rasterwaarden over die overlappen met de '1'-waarde van je mask. Bijvoorbeeld: Oplossing Link: https://code.earthengine.google.com/5eee98814a3dbe48f9a0da6312179e91","title":"Oef1 Roermond"},{"location":"Oefeningen/Oef2_Fritz.html","text":"Fritz, een Duitse student Fernerkundung aan de universiteit van Freiburg, is bezig aan een veldinventarisatie waarbij hij enkele landbekkingsklassen aan het inventariseren is. Bij thuiskomst realiseert Fritz zich echter dat hij zijn samples geen naam gegeven heeft en heeft bijgevolg beschikt over 4 locaties zonder label. Help jij hem de klassen opnieuw te onderscheiden? Gegeven Een startscript: https://code.earthengine.google.com/7a184f3697db1574544bafd1b73e772e Met 4 polygonen met onbekende landbekkingsklassen (genummerd op property class). Met afbakening van het studiegebied (ROI) Fritz had volgende klassen ge\u00efnventariseerd: class Label ? Loodbos ? Naaldbos ? Stad ? Water Gevraagd Vraag 2.1 : Fritz wenst een Valse Kleurencomposiet van zijn studiegebied, waarbij rekening wordt gehouden met volgende restricties: Een Landsat-8 beeld (Surface Reflectance, Tier 1 collectie) Gefilterd op de periode 1 juni 2019 t.e.m. 30 september 2019 Gefilterd op het studiegebied (ROI) Wolken dienen worden te verwijderd uit de beelden. Voor elke pixel de mediane waarde van de overgebleven collectie Vraag 2.2 : Ga na hoe je de 4 klassen spectraal van elkaar kan onderscheiden en illustreer dit a.d.h.v een grafiek. Verklaar. Kun je de 4 klassen correct toewijzen? Maak enkel gebruik van de noodzakelijke banden. Tip: centrale golflengtes Landsat 8 Oplossing Link: https://code.earthengine.google.com/3ad5b5e87ebbbfd859d103ab60fc4d2f","title":"Oef2 Fritz"},{"location":"Oefeningen/Oef2_Fritz.html#gegeven","text":"Een startscript: https://code.earthengine.google.com/7a184f3697db1574544bafd1b73e772e Met 4 polygonen met onbekende landbekkingsklassen (genummerd op property class). Met afbakening van het studiegebied (ROI) Fritz had volgende klassen ge\u00efnventariseerd: class Label ? Loodbos ? Naaldbos ? Stad ? Water","title":"Gegeven"},{"location":"Oefeningen/Oef2_Fritz.html#gevraagd","text":"Vraag 2.1 : Fritz wenst een Valse Kleurencomposiet van zijn studiegebied, waarbij rekening wordt gehouden met volgende restricties: Een Landsat-8 beeld (Surface Reflectance, Tier 1 collectie) Gefilterd op de periode 1 juni 2019 t.e.m. 30 september 2019 Gefilterd op het studiegebied (ROI) Wolken dienen worden te verwijderd uit de beelden. Voor elke pixel de mediane waarde van de overgebleven collectie Vraag 2.2 : Ga na hoe je de 4 klassen spectraal van elkaar kan onderscheiden en illustreer dit a.d.h.v een grafiek. Verklaar. Kun je de 4 klassen correct toewijzen? Maak enkel gebruik van de noodzakelijke banden.","title":"Gevraagd"},{"location":"Oefeningen/Oef2_Fritz.html#tip-centrale-golflengtes-landsat-8","text":"Oplossing Link: https://code.earthengine.google.com/3ad5b5e87ebbbfd859d103ab60fc4d2f","title":"Tip: centrale golflengtes Landsat 8"},{"location":"P1/P1-QGIS-intro.html","text":"Het elektromagnetisch spectrum Het aardoppervlak weerkaatst zonlicht. Hoeveel zonlicht hangt af van de specifieke kenmerken van het aardobject in kwestie zelf. Water bijvoorbeeld, weerkaatst zonlicht in het spectrum tot ongeveer 0.72 \u00b5m, maar absorbeert het zonlicht met grotere golflengtes quasi volledig. Elk voorwerp/landschapselement heeft op deze manier een specifieke \u2018spectrale, waarbij het gereflecteerde zonlicht in functie staat met de golflengte. Onderstaande figuur geeft het klassieke voorbeeld weer van dergelijke spectrale signaturen voor water, bodem en (groene) vegetatie. Spectrale signatuur van water - vegetatie - bodem. Oefening: het elektromagnetisch spectrum Vraag 2.1 - Welke golflengtes zijn niet geschikt bodem met groene vegetatie te onderscheiden? Vraag 2.2 - Binnen welke golflengtes zal water zwart lijken op het beeld? Het menselijke oog kan enkel de golflengtes binnen de zone 0.4 \u00b5m tot 0.7 \u00b5m waarnemen (a.k.a. het zichtbaar licht). Optische satellieten daarentegen kunnen gereflecteerd zonlicht waarnemen tot de hogere golflengtes; het infrarode, ver-infrarode en thermische deel van het elektromagnetisch spectrum. Welk exact deel van het spectrum een sensor opneemt is afhankelijk van de sensor in kwestie. Elke satelliet is immers beperkt in spectrale gevoeligheid, ook wel spectrale resolutie genoemd. Hoe gevoeliger de sensor is aan kleine spectrale verschillen (kleine golflengte-intervallen), hoe hoger de spectrale resolutie. Bandverdeling Sentinel-2 Laat ons enkele van de spectrale banden - die porties van het elektromagnetisch spectrum voorstellen - van het Sentinel-2 beeld verder inspecteren. Een Sentinel-2 beeld bevat in totaal 13 spectrale banden, met een spatiale resolutie van 10, 20 or 60m: Bandverdeling van Sentinel-2, met de centrale golflengte en spatiale resoltie per band. Bandeverdeling van Sentinel-2, Landsat 8 en Landsat 7 t.o.v de golflengtes Rastervisualisatie in QGIS We hebben reeds een Sentinel-2 beeld gedownload. Nu kunnen we de verschillende banden van dit beeld ook gaan visualiseren, wat we doen met behulp van QGIS. QGIS is een open-source geografisch informatiesysteem, wat betekent dat het vrij te downloaden en te gebruiken is. Binnen de practica van Teledetectie gebruiken we het louter voor de visualisatie van de spectrale banden in Practicum 1, maar voor het vak Geografische Informatiesystemen (2e semester), wordt de software verder uitgediept. Oefening: het openen van Sentinel-2 rasterban in QGIS Unzip je gedownload Sentinel-2 beeld naar een folder naar keuze In QGIS: open de Data Source Manager om data toe te voegen: Kies voor Raster Navigeer naar je gedownloade en Unzipte.SAFE-file Zoek naar Sentinel-2 Band 2 in 10m resolutie ( > GRANULE > L2A_... > IMG_DATA > .._B02_10m.jpg ) en voeg de band toe aan je project Identifier Als je klikt op het 'Identify'-symbooltje , kun je individuele pixelinformatie bekijken bij het klikken op je beeld. Oefening: het elektromagnetisch spectrum Vraag 2.4 - Vergelijk de pixelwaarde binnen band 2 van een wolkenpixel en een waterpixel. Wat betekent dit? Histogram Een histogram is een grafische weergave van de statistieken die in relatie staan met de helderheid van het beeld. Het geeft een distributie weer van de grijswaarden binnen een beeld. Op de verticale as lees je de \u2018hoeveelheid\u2019 van een bepaalde grijswaarde (horiziontale as) dat zich binnen een beeld bevindt. Om het histogram van een band in te laden in QGIS; Klik met je rechtermuisknop op je beeld in het 'Layers' paneel Kies Properties , een nieuw venster wordt geopend. Klik op de tab 'Histogram' Om het histogram te visualiseren klik je Compute Histogram , je histogram wordt nu geladen Histogram Vraag 2.3 - Wat zijn de minimum-maximumwaarden van de huidige visualisatie? Vraag 2.4 - Binnen welke range van pixelwaarden bevinden meeste pixels in het beeld zich? Image Stretching (contrast verhoging) Image Stretching is een techniek dat tracht om het contrast tussen de pixels in een beeld te verbeteren door het te \u2018stretchen\u2019 naar een nieuwe range van intensiteitswaarden. De keuze van deze range hangt af van de grondobjecten waar meer nuance nodig is, of waar de focus op ligt. Het beeld dat we momenteel hebben gevisualiseerd lijkt vrij donker, waarbij enkel de witte wolken duidelijk worden gevisualiseerd. Dit komt omdat de reflectiewaarden van wolken vele malen hoger ligt dat deze van andere landbedekkingsklassen (zoals te zien via de identifier en het histogram). Er bestaan 2 methoden om aan image stretching te doen binnen QGIS: Optie 1: via het histogram Door het aanpassen van de Min/Max grenzen van de visualisatie binnen het Histogram-venster kun je aan image stretching doen. Dit kun je doen door visueel de range af te bakenen waar de meeste pixels binnen vallen. Optie 2: via de raster toolar Een handige tool is de Raster toolbar, die toelaat om op basis van je huidig window view stretching uit te voeren. Deze toolbar is standaard niet zichtbaar, maar kan worden toegevoegd via View > Toolbars > Raster Toolbar . Hoover even met je muis over de verschillende knoppen om na te gaan wat te verschillen zijn. Test ze tevens eens uit. Spectrale banden Sentinel-2 Analyse: Spectrale banden Sentinel-2 Hieronder kun je een beschrijving terugvinden van de eigenschappen en gebruik per spectrale band van Sentinel-2. Visualiseer alle banden en tracht ook de verschillende landschapselementen terug te vinden, binnen elk van de banden. Band 2 - Blue - Resolution 10m Band 2 is useful for soil and vegetation discrimination, forest type mapping and identifying man-made features. It is scattered by the atmosphere, it illuminates material in shadows better than longer wavelengths, and it penetrates clear water better than other colors. It is absorbed by chlorophyll, which results in darker plants. Band 3 - Groen - Resolutie 10m It gives excellent contrast between clear and turbid (muddy) water, and penetrates clear water fairly well. It helps in highlighting oil on water surfaces, and vegetation. It reflects green light stronger than any other visible color. Man-made features are still visible. Band 5/6/7 - Red-edge - Resolutie 20m For classifying vegetation. Band 8 - NIR - Resolutie 10m The near infrared band is good for mapping shorelines and biomass content, as well as at detecting and analyzing vegetation. Band 8 - narrow NIR - Resolutie 20m The narrow near infrared band is a smaller portion of the NIR-range, to closely resemble the Landsat-8 NIR range. Band 9 - Water Vapour - Resolutie 60m It is good for detecting water vapour. Band 10 - SWIR Cirrus - Resolutie 60m For cirrus cloud detection. Band 11 - SWIR 1 - Resolutie 20m It is useful for measuring the moisture content of soil and vegetation, and it provides good contrast between different types of vegetation. It helps differentiate between snow and clouds. On the other hand, it has limited cloud penetration.. Band 12 - SWIR 2 - Resolutie 20m It is useful for measuring the moisture content of soil and vegetation, and it provides good contrast between different types of vegetation. It helps differentiate between snow and clouds. On the other hand, it has limited cloud penetration. Oefening - Bandverdeling Landsat 8 Oefening - Landsat 8 bandverdeling Link de verschillende Landsat-8 banden (in grijswaarden) met de overeenstemmende banden (zonder panchromatische band). Bekijk hiervoor de tabel met de Landsat-8 bandverdelingen het elektromagnetisch spectrum hierboven. Het gebied is de 'Greater Dublin Area'. A B C D E F G","title":"Het elektromagnetisch spectrum"},{"location":"P1/P1-QGIS-intro.html#het-elektromagnetisch-spectrum","text":"Het aardoppervlak weerkaatst zonlicht. Hoeveel zonlicht hangt af van de specifieke kenmerken van het aardobject in kwestie zelf. Water bijvoorbeeld, weerkaatst zonlicht in het spectrum tot ongeveer 0.72 \u00b5m, maar absorbeert het zonlicht met grotere golflengtes quasi volledig. Elk voorwerp/landschapselement heeft op deze manier een specifieke \u2018spectrale, waarbij het gereflecteerde zonlicht in functie staat met de golflengte. Onderstaande figuur geeft het klassieke voorbeeld weer van dergelijke spectrale signaturen voor water, bodem en (groene) vegetatie. Spectrale signatuur van water - vegetatie - bodem. Oefening: het elektromagnetisch spectrum Vraag 2.1 - Welke golflengtes zijn niet geschikt bodem met groene vegetatie te onderscheiden? Vraag 2.2 - Binnen welke golflengtes zal water zwart lijken op het beeld? Het menselijke oog kan enkel de golflengtes binnen de zone 0.4 \u00b5m tot 0.7 \u00b5m waarnemen (a.k.a. het zichtbaar licht). Optische satellieten daarentegen kunnen gereflecteerd zonlicht waarnemen tot de hogere golflengtes; het infrarode, ver-infrarode en thermische deel van het elektromagnetisch spectrum. Welk exact deel van het spectrum een sensor opneemt is afhankelijk van de sensor in kwestie. Elke satelliet is immers beperkt in spectrale gevoeligheid, ook wel spectrale resolutie genoemd. Hoe gevoeliger de sensor is aan kleine spectrale verschillen (kleine golflengte-intervallen), hoe hoger de spectrale resolutie.","title":"Het elektromagnetisch spectrum"},{"location":"P1/P1-QGIS-intro.html#bandverdeling-sentinel-2","text":"Laat ons enkele van de spectrale banden - die porties van het elektromagnetisch spectrum voorstellen - van het Sentinel-2 beeld verder inspecteren. Een Sentinel-2 beeld bevat in totaal 13 spectrale banden, met een spatiale resolutie van 10, 20 or 60m: Bandverdeling van Sentinel-2, met de centrale golflengte en spatiale resoltie per band. Bandeverdeling van Sentinel-2, Landsat 8 en Landsat 7 t.o.v de golflengtes","title":"Bandverdeling Sentinel-2"},{"location":"P1/P1-QGIS-intro.html#rastervisualisatie-in-qgis","text":"We hebben reeds een Sentinel-2 beeld gedownload. Nu kunnen we de verschillende banden van dit beeld ook gaan visualiseren, wat we doen met behulp van QGIS. QGIS is een open-source geografisch informatiesysteem, wat betekent dat het vrij te downloaden en te gebruiken is. Binnen de practica van Teledetectie gebruiken we het louter voor de visualisatie van de spectrale banden in Practicum 1, maar voor het vak Geografische Informatiesystemen (2e semester), wordt de software verder uitgediept. Oefening: het openen van Sentinel-2 rasterban in QGIS Unzip je gedownload Sentinel-2 beeld naar een folder naar keuze In QGIS: open de Data Source Manager om data toe te voegen: Kies voor Raster Navigeer naar je gedownloade en Unzipte.SAFE-file Zoek naar Sentinel-2 Band 2 in 10m resolutie ( > GRANULE > L2A_... > IMG_DATA > .._B02_10m.jpg ) en voeg de band toe aan je project","title":"Rastervisualisatie in QGIS"},{"location":"P1/P1-QGIS-intro.html#identifier","text":"Als je klikt op het 'Identify'-symbooltje , kun je individuele pixelinformatie bekijken bij het klikken op je beeld. Oefening: het elektromagnetisch spectrum Vraag 2.4 - Vergelijk de pixelwaarde binnen band 2 van een wolkenpixel en een waterpixel. Wat betekent dit?","title":"Identifier"},{"location":"P1/P1-QGIS-intro.html#histogram","text":"Een histogram is een grafische weergave van de statistieken die in relatie staan met de helderheid van het beeld. Het geeft een distributie weer van de grijswaarden binnen een beeld. Op de verticale as lees je de \u2018hoeveelheid\u2019 van een bepaalde grijswaarde (horiziontale as) dat zich binnen een beeld bevindt. Om het histogram van een band in te laden in QGIS; Klik met je rechtermuisknop op je beeld in het 'Layers' paneel Kies Properties , een nieuw venster wordt geopend. Klik op de tab 'Histogram' Om het histogram te visualiseren klik je Compute Histogram , je histogram wordt nu geladen Histogram Vraag 2.3 - Wat zijn de minimum-maximumwaarden van de huidige visualisatie? Vraag 2.4 - Binnen welke range van pixelwaarden bevinden meeste pixels in het beeld zich?","title":"Histogram"},{"location":"P1/P1-QGIS-intro.html#image-stretching-contrast-verhoging","text":"Image Stretching is een techniek dat tracht om het contrast tussen de pixels in een beeld te verbeteren door het te \u2018stretchen\u2019 naar een nieuwe range van intensiteitswaarden. De keuze van deze range hangt af van de grondobjecten waar meer nuance nodig is, of waar de focus op ligt. Het beeld dat we momenteel hebben gevisualiseerd lijkt vrij donker, waarbij enkel de witte wolken duidelijk worden gevisualiseerd. Dit komt omdat de reflectiewaarden van wolken vele malen hoger ligt dat deze van andere landbedekkingsklassen (zoals te zien via de identifier en het histogram). Er bestaan 2 methoden om aan image stretching te doen binnen QGIS: Optie 1: via het histogram Door het aanpassen van de Min/Max grenzen van de visualisatie binnen het Histogram-venster kun je aan image stretching doen. Dit kun je doen door visueel de range af te bakenen waar de meeste pixels binnen vallen. Optie 2: via de raster toolar Een handige tool is de Raster toolbar, die toelaat om op basis van je huidig window view stretching uit te voeren. Deze toolbar is standaard niet zichtbaar, maar kan worden toegevoegd via View > Toolbars > Raster Toolbar . Hoover even met je muis over de verschillende knoppen om na te gaan wat te verschillen zijn. Test ze tevens eens uit.","title":"Image Stretching (contrast verhoging)"},{"location":"P1/P1-QGIS-intro.html#spectrale-banden-sentinel-2","text":"Analyse: Spectrale banden Sentinel-2 Hieronder kun je een beschrijving terugvinden van de eigenschappen en gebruik per spectrale band van Sentinel-2. Visualiseer alle banden en tracht ook de verschillende landschapselementen terug te vinden, binnen elk van de banden. Band 2 - Blue - Resolution 10m Band 2 is useful for soil and vegetation discrimination, forest type mapping and identifying man-made features. It is scattered by the atmosphere, it illuminates material in shadows better than longer wavelengths, and it penetrates clear water better than other colors. It is absorbed by chlorophyll, which results in darker plants. Band 3 - Groen - Resolutie 10m It gives excellent contrast between clear and turbid (muddy) water, and penetrates clear water fairly well. It helps in highlighting oil on water surfaces, and vegetation. It reflects green light stronger than any other visible color. Man-made features are still visible. Band 5/6/7 - Red-edge - Resolutie 20m For classifying vegetation. Band 8 - NIR - Resolutie 10m The near infrared band is good for mapping shorelines and biomass content, as well as at detecting and analyzing vegetation. Band 8 - narrow NIR - Resolutie 20m The narrow near infrared band is a smaller portion of the NIR-range, to closely resemble the Landsat-8 NIR range. Band 9 - Water Vapour - Resolutie 60m It is good for detecting water vapour. Band 10 - SWIR Cirrus - Resolutie 60m For cirrus cloud detection. Band 11 - SWIR 1 - Resolutie 20m It is useful for measuring the moisture content of soil and vegetation, and it provides good contrast between different types of vegetation. It helps differentiate between snow and clouds. On the other hand, it has limited cloud penetration.. Band 12 - SWIR 2 - Resolutie 20m It is useful for measuring the moisture content of soil and vegetation, and it provides good contrast between different types of vegetation. It helps differentiate between snow and clouds. On the other hand, it has limited cloud penetration.","title":"Spectrale banden Sentinel-2"},{"location":"P1/P1-QGIS-intro.html#oefening-bandverdeling-landsat-8","text":"Oefening - Landsat 8 bandverdeling Link de verschillende Landsat-8 banden (in grijswaarden) met de overeenstemmende banden (zonder panchromatische band). Bekijk hiervoor de tabel met de Landsat-8 bandverdelingen het elektromagnetisch spectrum hierboven. Het gebied is de 'Greater Dublin Area'. A B C D E F G","title":"Oefening - Bandverdeling Landsat 8"},{"location":"P1/P1-Sentinel2.html","text":"The ESA Copernicus programme Copernicus is the EU's Earth Observation Programme, looking at our planet and its environment for the ultimate benefit of all European citizens. The overall goal is achieving a global, continuous, autonomous, high quality, wide range Earth observation capacity. Under the copernicus programme, ESA is developing a series of next-generation Earth observation missions under the name of 'Sentinel' programme. This Sentinel Programme, consists of multiple satellites, each focussing on a different aspect of Earth observation: atmospheric, Oceanic and Land monitoring: Current Sentinel satellites, with their main goal. (Source: ESA) In this practical will focus on the multispectral imagery taken by Sentinel 2 satellites. The Sentinel-2 mission Sentinel-2 is the copernicus Earth observation mission by ESA with the goal to perform terrestrial observations in support of services such as forest monitoring, land cover changes detection, and natural disaster management. It consists of two identical satellites, Sentinel-2A and Sentinel-2B. An interesting infograph about the Sentinel-2 mission can be found here . The Sentinel-2 mission has the following capabilities: Multi-spectral data with 13 bands in the visible, near infrared, and short wave infrared part of the spectrum Systematic global coverage of land surfaces from 56\u00b0 S to 84\u00b0 N, coastal waters, and all of the Mediterranean Sea Revisiting every 5 days under the same viewing angles. Spatial resolution of 10 m, 20 m and 60 m 290 km field of view Free and open data policy To achieve frequent revisits and high mission availability, the two identical Sentinel-2 satellites (Sentinel-2A and Sentinel-2B) operate simultaneously. The orbit is Sun synchronous at 786 km (488 mi) altitude. Sentinel 2 data download All data captured by the ESA copernicus Sentinel program are completely freely available to the public. The most convinient way to download (raw) Sentinel data is through the Copernicus Open Access Hub, a platform dedicate to provide easy acces to the user. For this, an user account is required. To register go to registration page . To acces the data hub, go to https://scihub.copernicus.eu/ . Off course, the data is also accessible through Google Earth Engine, but we will examine that later. Ex 2.1 - Downloading a Sentinel 2 Level 1C image In the first exercise, you will download an image from the Copernicus Open Access Hub. Go to https://scihub.copernicus.eu/ Klick \u2018Open hub\u2019 to access the Interactive Graphical User Interface Log in (or create an account) Zoom to Bel\u00e8m, a city in the north of Brazil, close to the gateway of the Amazon river Switch the \u2018Open street\u2019 view to \u2018sentinel-2 cloudless + Overlay\u2019 view Switch to \u2018navigation mode\u2019 Draw a rectangle around Bel\u00e8m: At the button \u2018Insert search criteria\u2019: go for \u2018advanced search\u2019 Look for a 2022 image (sensing period), Sentinel-2A, level 2A (product type) with a cloud cover of maximum 10%. Then click on the search button: Click on the search button Search for an image that contains the major part of the city (inspect the image in a quick look view ) Download this image to a folder on your computer. Sentinel file naming convention The naming of the Sentinel products follows the Compact Naming Convention: MMM_MSIXXX_YYYYMMDDHHMMSS_Nxxyy_ROOO_Txxxxx_\"Product Discriminator\".SAFE Where: MMM : is the mission ID (S2A/S2B) MSIXXX : MSIL1C denotes the Level-1C product level/ MSIL2A denotes the Level-2A product level (see \u2018radiometric correction\u2019). YYYYMMDDTHHMMSS : the datatake sensing start time Nxxyy : the Processing Baseline number (e.g. N0204) ROOO : Relative Orbit number (R001 - R143) Txxxxx : Tile Number field .SAFE : Product Format (Standard Archive Format for Europe) The products contain two dates. The first date (YYYYMMDDHHMMSS) is the datatake sensing time. The second date is the \"Product Discriminator\" field, which is 15 characters in length, and is used to distinguish between different end user products from the same datatake. Depending on the instance, the time in this field can be earlier or slightly later than the datatake sensing time. Thus, the following filename \u2018S2A_MSIL1C_20170105T013442_N0204_R031_T53NMJ_20170105T013443.SAFE\u2019 identifies a Level-1C product acquired by Sentinel-2A on the 5th of January, 2017 at 1:34:42 AM. It was acquired over Tile 53NMJ(2) during Relative Orbit 031, and processed with PDGS Processing Baseline 02.04. Other useful RS data sources Earth Explorer ESA has Sentinel-2, NASA has Landsat. However Landsat has a lower spatial resolution of 30m compared to the 10m of Sentinel-2 and Sentinel 2 has more spectral bands, Landsat imagery is probably the most used EO-data in science. This is because the Landsat program is the longest-running Earth Observation program of the entire Earth. Landsat-1 was already launched on July 23, 1972 resulting. Due to this difference, Landsat is on this moment more useful for historic land-change assessments than Sentinel-2 (launched in 2015). Landsat data is also freely avaible to the public. For this, the United States Geological Survey has created a data portal with extensive collections of EO data, with Landsat satellite imagery, Radar data, UAS data, digital line graphs, digital elevation model data, aerial photos, Sentinel satellite data, ... Link: earthexplorer.usgs.gov Other data sources Following website contains a nice overview of online free EO data sources: https://www.geoawesomeness.com/list-of-top-10-sources-of-free-remote-sensing-data/","title":"Sentinel-2 intro and download"},{"location":"P1/P1-Sentinel2.html#the-esa-copernicus-programme","text":"Copernicus is the EU's Earth Observation Programme, looking at our planet and its environment for the ultimate benefit of all European citizens. The overall goal is achieving a global, continuous, autonomous, high quality, wide range Earth observation capacity. Under the copernicus programme, ESA is developing a series of next-generation Earth observation missions under the name of 'Sentinel' programme. This Sentinel Programme, consists of multiple satellites, each focussing on a different aspect of Earth observation: atmospheric, Oceanic and Land monitoring: Current Sentinel satellites, with their main goal. (Source: ESA) In this practical will focus on the multispectral imagery taken by Sentinel 2 satellites.","title":"The ESA Copernicus programme"},{"location":"P1/P1-Sentinel2.html#the-sentinel-2-mission","text":"Sentinel-2 is the copernicus Earth observation mission by ESA with the goal to perform terrestrial observations in support of services such as forest monitoring, land cover changes detection, and natural disaster management. It consists of two identical satellites, Sentinel-2A and Sentinel-2B. An interesting infograph about the Sentinel-2 mission can be found here . The Sentinel-2 mission has the following capabilities: Multi-spectral data with 13 bands in the visible, near infrared, and short wave infrared part of the spectrum Systematic global coverage of land surfaces from 56\u00b0 S to 84\u00b0 N, coastal waters, and all of the Mediterranean Sea Revisiting every 5 days under the same viewing angles. Spatial resolution of 10 m, 20 m and 60 m 290 km field of view Free and open data policy To achieve frequent revisits and high mission availability, the two identical Sentinel-2 satellites (Sentinel-2A and Sentinel-2B) operate simultaneously. The orbit is Sun synchronous at 786 km (488 mi) altitude.","title":"The Sentinel-2 mission"},{"location":"P1/P1-Sentinel2.html#sentinel-2-data-download","text":"All data captured by the ESA copernicus Sentinel program are completely freely available to the public. The most convinient way to download (raw) Sentinel data is through the Copernicus Open Access Hub, a platform dedicate to provide easy acces to the user. For this, an user account is required. To register go to registration page . To acces the data hub, go to https://scihub.copernicus.eu/ . Off course, the data is also accessible through Google Earth Engine, but we will examine that later. Ex 2.1 - Downloading a Sentinel 2 Level 1C image In the first exercise, you will download an image from the Copernicus Open Access Hub. Go to https://scihub.copernicus.eu/ Klick \u2018Open hub\u2019 to access the Interactive Graphical User Interface Log in (or create an account) Zoom to Bel\u00e8m, a city in the north of Brazil, close to the gateway of the Amazon river Switch the \u2018Open street\u2019 view to \u2018sentinel-2 cloudless + Overlay\u2019 view Switch to \u2018navigation mode\u2019 Draw a rectangle around Bel\u00e8m: At the button \u2018Insert search criteria\u2019: go for \u2018advanced search\u2019 Look for a 2022 image (sensing period), Sentinel-2A, level 2A (product type) with a cloud cover of maximum 10%. Then click on the search button: Click on the search button Search for an image that contains the major part of the city (inspect the image in a quick look view ) Download this image to a folder on your computer.","title":"Sentinel 2 data download"},{"location":"P1/P1-Sentinel2.html#sentinel-file-naming-convention","text":"The naming of the Sentinel products follows the Compact Naming Convention: MMM_MSIXXX_YYYYMMDDHHMMSS_Nxxyy_ROOO_Txxxxx_\"Product Discriminator\".SAFE Where: MMM : is the mission ID (S2A/S2B) MSIXXX : MSIL1C denotes the Level-1C product level/ MSIL2A denotes the Level-2A product level (see \u2018radiometric correction\u2019). YYYYMMDDTHHMMSS : the datatake sensing start time Nxxyy : the Processing Baseline number (e.g. N0204) ROOO : Relative Orbit number (R001 - R143) Txxxxx : Tile Number field .SAFE : Product Format (Standard Archive Format for Europe) The products contain two dates. The first date (YYYYMMDDHHMMSS) is the datatake sensing time. The second date is the \"Product Discriminator\" field, which is 15 characters in length, and is used to distinguish between different end user products from the same datatake. Depending on the instance, the time in this field can be earlier or slightly later than the datatake sensing time. Thus, the following filename \u2018S2A_MSIL1C_20170105T013442_N0204_R031_T53NMJ_20170105T013443.SAFE\u2019 identifies a Level-1C product acquired by Sentinel-2A on the 5th of January, 2017 at 1:34:42 AM. It was acquired over Tile 53NMJ(2) during Relative Orbit 031, and processed with PDGS Processing Baseline 02.04.","title":"Sentinel file naming convention"},{"location":"P1/P1-Sentinel2.html#other-useful-rs-data-sources","text":"","title":"Other useful RS data sources"},{"location":"P1/P1-Sentinel2.html#earth-explorer","text":"ESA has Sentinel-2, NASA has Landsat. However Landsat has a lower spatial resolution of 30m compared to the 10m of Sentinel-2 and Sentinel 2 has more spectral bands, Landsat imagery is probably the most used EO-data in science. This is because the Landsat program is the longest-running Earth Observation program of the entire Earth. Landsat-1 was already launched on July 23, 1972 resulting. Due to this difference, Landsat is on this moment more useful for historic land-change assessments than Sentinel-2 (launched in 2015). Landsat data is also freely avaible to the public. For this, the United States Geological Survey has created a data portal with extensive collections of EO data, with Landsat satellite imagery, Radar data, UAS data, digital line graphs, digital elevation model data, aerial photos, Sentinel satellite data, ... Link: earthexplorer.usgs.gov","title":"Earth Explorer"},{"location":"P1/P1-Sentinel2.html#other-data-sources","text":"Following website contains a nice overview of online free EO data sources: https://www.geoawesomeness.com/list-of-top-10-sources-of-free-remote-sensing-data/","title":"Other data sources"},{"location":"P1/P1-colour-composites.html","text":"Kleurcomposieten Door combineren van verschillende banden tot \u00e9\u00e9n enkel beeld, kunnen beeldkenmerken duidelijk worden die daarvoor moeilijk te onderscheiden waren. Een beeld bestaat typisch uit 3 kleurbanden: de blauwe, groene en rode band. In een ware of normale kleurencomposiet (\u2018true color composite\u2019) is het simpel: hier worden de blauwe, groene en rode band aan de overeenkomstige kleurbanden toegekend. Het resulterende beeld stemt dan overeen met hetgeen het menselijke oog waarneemt. Een ander veelgebruikte composiet is de valse kleuren composiet (\u2018false colour composite\u2019), waarbij de groene, rode en infrarode band worden toegekend aan respectievelijk de blauwe, groene en rode kleur. In dit beeld krijgt vegetatie een rode kleur aangezien het een sterke reflectie kent binnen de NIR-band. Water krijgt een blauwe kleur, aangezien het sterk gereflecteerd wordt in de groene band (en meer wordt geabsorbeerd in rode/infrarood). Aanmaken van een beeldcomposiet in QGIS Laat ons een eigen beeldcomposiet aanmaken in QGIS! Hiervoor laad je eerst de andere banden ook in je project. Klik daarna op het menu-item 'Raster'> 'Miscellaneous' > 'Build Virtual Raster' Een nieuw scherm wordt getoond, waarbij je de keuze krijgt om banden toe te voegen. Kies hierbij voor de 3 banden waarvoor je een beeldcomposiet wenst te maken (bijvoorbeeld Band 8 (NIR), Band 4(Rood), Band 3 (Groen) bij het maken van een Valse Kleurencomposiet). De volgorde van de banden is hierbij van belang, deze kun je nog verslepen bij het toevoegen). Kies daarnaast ook om je inputbanden elk in een afzonderlijke band te plaatsen (anders wordt een gemiddelde waarde berekend), en de Resolutie naar 'Highest' te veranderen. Dit zorgt er voor - mocht je composieten met banden van verschillende resoluties willen aanmaken (bv 10m samen met 20m) - de banden ook 'geresampled' worden. Info - Resampling Resampling is het aanpassen van de spatiale resolutie van een rasterbeeld. Hiermee kan bijvoorbeeld een spectrale band met resolutie van 20m worden omgezet naar 10m, zodat deze kan gecombineerd worden met een band van 10m resolutie. Het verhogen van de spatiale resolutie is upsampling , terwijl het verlagen van de spatiale resolutie downsampling wordt genoemd. Principe van resampling . Boven: upsampling (via 'nearest neighbor'). Onder: Downsampling (via 'minimum'). Na het laten lopen van de tool, wordt een nieuwe laag binnen QGIS aangemaakt; de composiet (als een virtuele laag). Helaas behouden de banden hun naam niet binnen de nieuw aangemaakte virtuele raster, waardoor de volgorde van toevoegen van belang. Automatisch wordt de bovenste laag in het lijstje 'Band 1' binnen de composiet. Houd dit dus goed bij bij het aanmaken van composieten! De toekenning van banden aan de 3 kleurbanden, zijn wel te wijzigen. Klik hiervoor met je rechtermuis op de Virtual Layer > Properties > Symbology . Pas hierbij de banden aan om ook de composiet te wijzigen. Test ook enkele andere typische Sentinel-2 composieten (Red, Green, Blue): Natural Colour: 4 3 2 False colour Infrared: 8 4 3 False colour Urban: 12 11 4 Agriculture: 11 8 2 Atmospheric penetration: 12 11 8a Healthy vegetation: 8 11 2 Land/Water: 8 11 4 Natural Colours with Atmospheric Removal: 12 8 3 Shortwave Infrared: 12 8 4 Vegetation Analysis: 11 8 4 Beeldcomposieten: oefeningen Oefening 1 - Mackenzie River Gegeven zijn 4 verschillende kleurencomposieten van hetzelfde beeld. Met welke bandcombinaties zou je deze kunnen verbinden? Kleur => Banden (R,G,B) Beeld R,G,B => 3,2,1 R,G,B => 3,4,5 R,G,B => 4,3,2 R,G,B => 5,4,3 Mackenzie River, N.W.T., LANDSAT TM. Figuur C: bossen zijn rood, de donkerder bruine gebieden in het midden van het gebied zijn stukken afgebrand bos. De witte gedeelte zijn bergtoppen bedekt met sneeuw. Oefening 2 - Roermond Gegeven zijn 4 verschillende kleurencomposieten van hetzelfde beeld. Met welke bandcombinaties zou je deze kunnen verbinden? Kleur => Banden (R,G,B) Beeld R,G,B => 5,4,3 R,G,B => 6,5,4 R,G,B => 5,6,2 R,G,B => 4,3,2 Roermond, Landsat 8 OLI.","title":"Kleurcomposieten"},{"location":"P1/P1-colour-composites.html#kleurcomposieten","text":"Door combineren van verschillende banden tot \u00e9\u00e9n enkel beeld, kunnen beeldkenmerken duidelijk worden die daarvoor moeilijk te onderscheiden waren. Een beeld bestaat typisch uit 3 kleurbanden: de blauwe, groene en rode band. In een ware of normale kleurencomposiet (\u2018true color composite\u2019) is het simpel: hier worden de blauwe, groene en rode band aan de overeenkomstige kleurbanden toegekend. Het resulterende beeld stemt dan overeen met hetgeen het menselijke oog waarneemt. Een ander veelgebruikte composiet is de valse kleuren composiet (\u2018false colour composite\u2019), waarbij de groene, rode en infrarode band worden toegekend aan respectievelijk de blauwe, groene en rode kleur. In dit beeld krijgt vegetatie een rode kleur aangezien het een sterke reflectie kent binnen de NIR-band. Water krijgt een blauwe kleur, aangezien het sterk gereflecteerd wordt in de groene band (en meer wordt geabsorbeerd in rode/infrarood).","title":"Kleurcomposieten"},{"location":"P1/P1-colour-composites.html#aanmaken-van-een-beeldcomposiet-in-qgis","text":"Laat ons een eigen beeldcomposiet aanmaken in QGIS! Hiervoor laad je eerst de andere banden ook in je project. Klik daarna op het menu-item 'Raster'> 'Miscellaneous' > 'Build Virtual Raster' Een nieuw scherm wordt getoond, waarbij je de keuze krijgt om banden toe te voegen. Kies hierbij voor de 3 banden waarvoor je een beeldcomposiet wenst te maken (bijvoorbeeld Band 8 (NIR), Band 4(Rood), Band 3 (Groen) bij het maken van een Valse Kleurencomposiet). De volgorde van de banden is hierbij van belang, deze kun je nog verslepen bij het toevoegen). Kies daarnaast ook om je inputbanden elk in een afzonderlijke band te plaatsen (anders wordt een gemiddelde waarde berekend), en de Resolutie naar 'Highest' te veranderen. Dit zorgt er voor - mocht je composieten met banden van verschillende resoluties willen aanmaken (bv 10m samen met 20m) - de banden ook 'geresampled' worden. Info - Resampling Resampling is het aanpassen van de spatiale resolutie van een rasterbeeld. Hiermee kan bijvoorbeeld een spectrale band met resolutie van 20m worden omgezet naar 10m, zodat deze kan gecombineerd worden met een band van 10m resolutie. Het verhogen van de spatiale resolutie is upsampling , terwijl het verlagen van de spatiale resolutie downsampling wordt genoemd. Principe van resampling . Boven: upsampling (via 'nearest neighbor'). Onder: Downsampling (via 'minimum'). Na het laten lopen van de tool, wordt een nieuwe laag binnen QGIS aangemaakt; de composiet (als een virtuele laag). Helaas behouden de banden hun naam niet binnen de nieuw aangemaakte virtuele raster, waardoor de volgorde van toevoegen van belang. Automatisch wordt de bovenste laag in het lijstje 'Band 1' binnen de composiet. Houd dit dus goed bij bij het aanmaken van composieten! De toekenning van banden aan de 3 kleurbanden, zijn wel te wijzigen. Klik hiervoor met je rechtermuis op de Virtual Layer > Properties > Symbology . Pas hierbij de banden aan om ook de composiet te wijzigen. Test ook enkele andere typische Sentinel-2 composieten (Red, Green, Blue): Natural Colour: 4 3 2 False colour Infrared: 8 4 3 False colour Urban: 12 11 4 Agriculture: 11 8 2 Atmospheric penetration: 12 11 8a Healthy vegetation: 8 11 2 Land/Water: 8 11 4 Natural Colours with Atmospheric Removal: 12 8 3 Shortwave Infrared: 12 8 4 Vegetation Analysis: 11 8 4","title":"Aanmaken van een beeldcomposiet in QGIS"},{"location":"P1/P1-colour-composites.html#beeldcomposieten-oefeningen","text":"Oefening 1 - Mackenzie River Gegeven zijn 4 verschillende kleurencomposieten van hetzelfde beeld. Met welke bandcombinaties zou je deze kunnen verbinden? Kleur => Banden (R,G,B) Beeld R,G,B => 3,2,1 R,G,B => 3,4,5 R,G,B => 4,3,2 R,G,B => 5,4,3 Mackenzie River, N.W.T., LANDSAT TM. Figuur C: bossen zijn rood, de donkerder bruine gebieden in het midden van het gebied zijn stukken afgebrand bos. De witte gedeelte zijn bergtoppen bedekt met sneeuw. Oefening 2 - Roermond Gegeven zijn 4 verschillende kleurencomposieten van hetzelfde beeld. Met welke bandcombinaties zou je deze kunnen verbinden? Kleur => Banden (R,G,B) Beeld R,G,B => 5,4,3 R,G,B => 6,5,4 R,G,B => 5,6,2 R,G,B => 4,3,2 Roermond, Landsat 8 OLI.","title":"Beeldcomposieten: oefeningen"},{"location":"P1/P1-intro.html","text":"Practicum 1: Image download & preprocessing By combining different proportions of the three primary colours Red, Green and Blue, various colours are created Doel van het practicum In dit practicum zien we enkele tools voor het downloaden van losse Sentinel-2 beelden, het aanmaken en interpreteren van sentinel-2 beeldcomposieten in QGIS. Na deze 'introductie'-sessie wordt gebruik gemaakt van Google Earth Engine voor verdere beeldverwerkingoefeningen. Inhoud: Downloaden van remote sensing data: via ESA sentinel hub via andere bronnen Introductie van QGIS: Inlezen van RS beelden Basisfunctionaliteiten QGIS Aanmaken van beeldcomposieten Beeldinterpretatie Beeldcomposieten Histogrammen Beeldvoorbewerking in QGIS (Sentinel-2): Clipping Resampling Mosaicing","title":"Introduction"},{"location":"P1/P1-intro.html#practicum-1-image-download-preprocessing","text":"By combining different proportions of the three primary colours Red, Green and Blue, various colours are created","title":"Practicum 1: Image download &amp; preprocessing"},{"location":"P1/P1-intro.html#doel-van-het-practicum","text":"In dit practicum zien we enkele tools voor het downloaden van losse Sentinel-2 beelden, het aanmaken en interpreteren van sentinel-2 beeldcomposieten in QGIS. Na deze 'introductie'-sessie wordt gebruik gemaakt van Google Earth Engine voor verdere beeldverwerkingoefeningen.","title":"Doel van het practicum"},{"location":"P1/P1-intro.html#inhoud","text":"Downloaden van remote sensing data: via ESA sentinel hub via andere bronnen Introductie van QGIS: Inlezen van RS beelden Basisfunctionaliteiten QGIS Aanmaken van beeldcomposieten Beeldinterpretatie Beeldcomposieten Histogrammen Beeldvoorbewerking in QGIS (Sentinel-2): Clipping Resampling Mosaicing","title":"Inhoud:"},{"location":"P1/P2-colour-composites-ctd.html","text":"Displaying more band combinations When you have performed an image resampling, open again the RGB image window in SNAP. You will notice that the list with possible band combinations is larger. Test some of the following band combinations and explore the colour differences. Which features are most clear on the following band combinations? Natural Colours: 4 3 2 False colour Infrared: 8 4 3 False colour Urban: 12 11 4 Agriculture: 11 8 2 Atmospheric penetration: 12 11 8a Healthy vegetation: 8 11 2 Land/Water: 8 11 4 Natural Colours with Atmospheric Removal: 12 8 3 Shortwave Infrared: 12 8 4 Vegetation Analysis: 11 8 4","title":"P2 colour composites ctd"},{"location":"P1/P2-colour-composites-ctd.html#displaying-more-band-combinations","text":"When you have performed an image resampling, open again the RGB image window in SNAP. You will notice that the list with possible band combinations is larger. Test some of the following band combinations and explore the colour differences. Which features are most clear on the following band combinations? Natural Colours: 4 3 2 False colour Infrared: 8 4 3 False colour Urban: 12 11 4 Agriculture: 11 8 2 Atmospheric penetration: 12 11 8a Healthy vegetation: 8 11 2 Land/Water: 8 11 4 Natural Colours with Atmospheric Removal: 12 8 3 Shortwave Infrared: 12 8 4 Vegetation Analysis: 11 8 4","title":"Displaying more band combinations"},{"location":"P1/P2-image-preprocessing.html","text":"Radiometric & atmospheric correction Satellite images obtained by the sensing device are not directly usable. They need to go through a series of pre-processing before they are ready to use. The scheme below illustrates the pre-processing steps that Sentinel-images undergo before they are made available for the user. This includes geometric correction, some radiometric correction (noise reduction, defective pixels identification) the computation of cloud masks, etc. The outcome is a level 1C product, which is Top-Of-the-Atmosphere (TOA). TOA reflectances are subjected to radiometric bias caused by different lighting conditions, atmospheric interactions and viewing geometry. In order to relate reflectances to physical field properties, TOA reflectance values are conversed to BOA (Bottom Of Atmosphere) corrected reflectance values. This radiometric correction is an essential part in image processing. BOA, Sentinel-2 processing level 2A, is available for the user (except for recent images) or can be created by the user itself, using the Sen2Cor freeware. Figure: A true color comparison of the surface reflectance product (top) and a top of atmosphere reflectance image (bottom) in adjacent scenes captured by the same satellite (Planet.com) In Snap, the conversion of level 1C TOA-reflectance to level 2A BOA-reflectance can be done through Sen2Cor (plug-in or stand-alone). Sen2Cor corrects the reflectance values based on (among others) \u2018look-up tables\u2019, these are tables that relate physical parameters to model coefficients. Parameters such as inclination and product type are sensor dependent (different for Landsat as for Sentinel or Spot). On board, optical satellites have some meteorological sensors that measure atmosphere features such as the air thickness and the amount of aerosols among others. This information is available as a \u2018header file\u2019 for each image. Since December 2018, users can download Level-2A processed products directly. In case of this exercise, we downloaded a Level 1C product. Thus, let\u2019s perform an atmospheric correction! Exercise: atmospheric correction with Sen2Cor In the folder where you have saved the image, unzip the Sentinel-image. Go to \u2018Optical\u2019 > \u2018Thematic Land Processing\u2019 > \u2018Sen2Cor processor\u2019 > \u2018Sen2Cor280\u2019 When you choose the source product, click on the \u2018\u2026\u2019, browse to the image and navigate to the \u2018MTD_MSIL1C.xml\u2019 product. In the tab \u2018processing parameters\u2019, set the resolution to \u2018ALL\u2019 The other processing parameters are by default taken from a combination of the image metadata (header file) and look-up tables. This is why you will normally use the default processing parameters. However, if you want to adjust these parameters, you can do that manually. Run Sen2Cor (!be patient, it will take a while to process the entire image.) Explore the outcome image (RGB). What differences do you see according to the original image? Installing 'Sen2Cor' plugin Possibly sen2cor isn\u2019t installed yet. To do this, go to \u2018Tools\u2019 > \u2018Plugins\u2019. During the first run, you\u2019ll get an error, after which an extra bundle will be installed. ). Intermezzo: Cloud Masks The image contain clouds. This means that there are some blind pixels, which lack information on the reflectance of the earth\u2019s surface at the sensing time. This phenomenon is very common in tropical areas with a rainy season. It is possible that over the whole period of the rainy season, you will not be able to obtain images with a cloud cover of less than 90%. In such cases, Radar imaging can be useful, but are complexer. An introduction to radar imaging will be given later in these practicals. Included in a Sentinel-2 image folder you can find some cloud masks at a resolution of 10m, 20m and 60m. These cloud masks enable the user to identify cloudy and cloud-free pixels. The masks include both dense clouds (opaque clouds) and cirrus clouds. These cloud masks are computed by a threshold algorithm. Below, the methods are described that identify the cloud pixels (for your information). Identification of dense clouds Dense clouds, also called opaque clouds, are characterised by a high reflectance in the blue spectral region (B2). The method used to identify dense cloud pixels is based on B2 reflectance threshold. To avoid false detection, mainly due to snow/cloud confusion, SWIR reflectance in B11 and B12 are also used. Snow and clouds both have a high reflectance in the blue. Cloud reflectance is high in the SWIR, whereas snow presents a low reflectance. Additional criteria based on B10 reflectance are added to avoid high altitude ice cloud and snow confusion (both having a low reflectance in the SWIR bands B11 and B12). At B10, there is a high atmospheric absorption band and only high altitude clouds are detected. However, this last criterion is only applied after a first detection of cloud pixel in the blue band where cirrus is transparent. Identification of cirrus clouds Cirrus clouds are thin, transparent or semi-transparent clouds, forming at high altitudes, approximately 6-7 km above the Earth's surface. The method of identifying cirrus cloud pixels from dense cloud pixel is based on two spectral criteria: (1) B10 corresponds to a high atmospheric absorption band: only high altitude clouds can be detected, (2) cirrus clouds, being semi-transparent, cannot be detected in the B2 blue band. A pixel with low reflectance in the B2 band and high reflectance in the B10 band has a good probability of being cirrus cloud but this is not a certainty. Some opaque clouds have a low reflectance in the blue and can be identified as cirrus cloud. To limit false detections (due to high reflectance in the blue or due to the fact that clouds are not spectrally registered), a filter using morphology-based operations is applied on both dense and cirrus cloud masks: (1) erosion, to remove isolated pixels, (2) dilatation, to fill the gap and extend clouds. If after morphology operations, a pixel is both dense and cirrus, the dense cloud mask prevails. Sen2Cor scene classification The Sen2Cor-processor you've runned for the atmospheric correction from the level 1C to the level 2A product also contains a scene classification algorithm. This algorithm creates a scene classification, where pixels als classified in some broad classes: Here, clouds are classified into 'cloud probability masks', which are in general more precise than the level 1C cloud masks. Exercise: Visualize cloud masks Visualize the cloud masks. If you look at the cloud masks, you will see that these are not very precise. These cloud masks are useful for rough estimations. Later we will see alternative ways to identify cloud pixels more precise. Resampling In order to display the other band combinations, some geometrical pre-processing is necessary. The bands have to be resampled to an equal resolution. The goal is to resample the image bands to 10m (you can take B2, B3, B4 or B8 as a reference band). This means that all other bands will be upsampled. Image resampling scheme. Top: upsampling (nearest neighbor). Bottom: Downsampling (minimum). Exercise: resampling In the product explorer, select the outcome image of Sen2Cor. Go to Raster > Geometric operations > Resampling . Select the \u2018Save as\u2026 BEAM-DIMAP\u2019 box. Browse to your directory. Choose a logical name for the target product. Resampling Parameters: Choose a reference band that has a resolution of 10m, or choose for a pixel resolution of 10m. Use an upsampling method of your choice (Read the help for more details on the different algorithms). Run resampling . Saving the images takes a lot of time. Again, be patient! Image Subsetting Processing an entire Sentinel-2 image takes a lot of processing capacity and time (as you probably have noted already). Therefore, you will now learn how to only process a small part of the image. You can choose to reduce the spatial extent of the image, or you can choose to reduce the amount of bands in the image, or a combination of both. An important aspect is that creating a subset is only possible for bands that have the same size. Thus, this will only be possible after resampling . Exercise: subsetting an image Select the resampled image in the product explorer. Go to Raster > Subset. Select a spatial subset by choice (by adjusting the scene start and end). Make sure your spatial extent is substantially smaller than the original image. Snap Subsetting screen. Select only following bands: [B2, B3, B4, B5, B6, B7, B8, B8A, B11, B12] You can see an estimation of the new required storage space. Snap Subsetting screen. Click OK Another option to make a subset is \u2018Spatial subset from view\u2019. Zoom in on your image. Rightclick and select \u2018Spatial subset from view\u2019. FYI: it is also possible to take a subset of an image, based on a vector layer. Mosaicing Mosaicing is the merging of several arbitrarily shaped images and often used to merge two neighbouring satellite images. Exercise: mosaicing Download an image that is located next to the image you are already working with, dating from the same time as the original image was taken. You can download it directly in Level 2A, thus skipping the sen2cor atmospheric correction. Resample the image. Go to raster > Geometric operations > Mosaicing Snap mosaicing screen. Add the two source products. Choose the directory in which you want to save the mosaic image. In the Map Projection Definition you can choose the Coordinate Reference System (CRS). Choose for UTM/WGS84 (automatic) Choose for a resolution of 10m. The input products don\u2019t need to be orthorectified (because they already are). In the tab \u2018Variables and Conditions\u2019, click the - symbol. Select Band 2,3,4 and 8 Run Mosaicing. Open the RGB-image of the product. Compare it to the two original images. Extra: Examine the example of Landsat satellite image after merging below. What went wrong when mosaicing images 1 and 2? Why is there a colour difference in 2 and 3? Why is there no observable colour difference in 2 and 4? Have you any idea how to eliminate the colour difference between 2 and 3, given that neighbouring satellite images always partly overlap? Landsat images mosaic","title":"P2 image preprocessing"},{"location":"P1/P2-image-preprocessing.html#radiometric-atmospheric-correction","text":"Satellite images obtained by the sensing device are not directly usable. They need to go through a series of pre-processing before they are ready to use. The scheme below illustrates the pre-processing steps that Sentinel-images undergo before they are made available for the user. This includes geometric correction, some radiometric correction (noise reduction, defective pixels identification) the computation of cloud masks, etc. The outcome is a level 1C product, which is Top-Of-the-Atmosphere (TOA). TOA reflectances are subjected to radiometric bias caused by different lighting conditions, atmospheric interactions and viewing geometry. In order to relate reflectances to physical field properties, TOA reflectance values are conversed to BOA (Bottom Of Atmosphere) corrected reflectance values. This radiometric correction is an essential part in image processing. BOA, Sentinel-2 processing level 2A, is available for the user (except for recent images) or can be created by the user itself, using the Sen2Cor freeware. Figure: A true color comparison of the surface reflectance product (top) and a top of atmosphere reflectance image (bottom) in adjacent scenes captured by the same satellite (Planet.com) In Snap, the conversion of level 1C TOA-reflectance to level 2A BOA-reflectance can be done through Sen2Cor (plug-in or stand-alone). Sen2Cor corrects the reflectance values based on (among others) \u2018look-up tables\u2019, these are tables that relate physical parameters to model coefficients. Parameters such as inclination and product type are sensor dependent (different for Landsat as for Sentinel or Spot). On board, optical satellites have some meteorological sensors that measure atmosphere features such as the air thickness and the amount of aerosols among others. This information is available as a \u2018header file\u2019 for each image. Since December 2018, users can download Level-2A processed products directly. In case of this exercise, we downloaded a Level 1C product. Thus, let\u2019s perform an atmospheric correction! Exercise: atmospheric correction with Sen2Cor In the folder where you have saved the image, unzip the Sentinel-image. Go to \u2018Optical\u2019 > \u2018Thematic Land Processing\u2019 > \u2018Sen2Cor processor\u2019 > \u2018Sen2Cor280\u2019 When you choose the source product, click on the \u2018\u2026\u2019, browse to the image and navigate to the \u2018MTD_MSIL1C.xml\u2019 product. In the tab \u2018processing parameters\u2019, set the resolution to \u2018ALL\u2019 The other processing parameters are by default taken from a combination of the image metadata (header file) and look-up tables. This is why you will normally use the default processing parameters. However, if you want to adjust these parameters, you can do that manually. Run Sen2Cor (!be patient, it will take a while to process the entire image.) Explore the outcome image (RGB). What differences do you see according to the original image? Installing 'Sen2Cor' plugin Possibly sen2cor isn\u2019t installed yet. To do this, go to \u2018Tools\u2019 > \u2018Plugins\u2019. During the first run, you\u2019ll get an error, after which an extra bundle will be installed. ).","title":"Radiometric &amp; atmospheric correction"},{"location":"P1/P2-image-preprocessing.html#intermezzo-cloud-masks","text":"The image contain clouds. This means that there are some blind pixels, which lack information on the reflectance of the earth\u2019s surface at the sensing time. This phenomenon is very common in tropical areas with a rainy season. It is possible that over the whole period of the rainy season, you will not be able to obtain images with a cloud cover of less than 90%. In such cases, Radar imaging can be useful, but are complexer. An introduction to radar imaging will be given later in these practicals. Included in a Sentinel-2 image folder you can find some cloud masks at a resolution of 10m, 20m and 60m. These cloud masks enable the user to identify cloudy and cloud-free pixels. The masks include both dense clouds (opaque clouds) and cirrus clouds. These cloud masks are computed by a threshold algorithm. Below, the methods are described that identify the cloud pixels (for your information). Identification of dense clouds Dense clouds, also called opaque clouds, are characterised by a high reflectance in the blue spectral region (B2). The method used to identify dense cloud pixels is based on B2 reflectance threshold. To avoid false detection, mainly due to snow/cloud confusion, SWIR reflectance in B11 and B12 are also used. Snow and clouds both have a high reflectance in the blue. Cloud reflectance is high in the SWIR, whereas snow presents a low reflectance. Additional criteria based on B10 reflectance are added to avoid high altitude ice cloud and snow confusion (both having a low reflectance in the SWIR bands B11 and B12). At B10, there is a high atmospheric absorption band and only high altitude clouds are detected. However, this last criterion is only applied after a first detection of cloud pixel in the blue band where cirrus is transparent. Identification of cirrus clouds Cirrus clouds are thin, transparent or semi-transparent clouds, forming at high altitudes, approximately 6-7 km above the Earth's surface. The method of identifying cirrus cloud pixels from dense cloud pixel is based on two spectral criteria: (1) B10 corresponds to a high atmospheric absorption band: only high altitude clouds can be detected, (2) cirrus clouds, being semi-transparent, cannot be detected in the B2 blue band. A pixel with low reflectance in the B2 band and high reflectance in the B10 band has a good probability of being cirrus cloud but this is not a certainty. Some opaque clouds have a low reflectance in the blue and can be identified as cirrus cloud. To limit false detections (due to high reflectance in the blue or due to the fact that clouds are not spectrally registered), a filter using morphology-based operations is applied on both dense and cirrus cloud masks: (1) erosion, to remove isolated pixels, (2) dilatation, to fill the gap and extend clouds. If after morphology operations, a pixel is both dense and cirrus, the dense cloud mask prevails. Sen2Cor scene classification The Sen2Cor-processor you've runned for the atmospheric correction from the level 1C to the level 2A product also contains a scene classification algorithm. This algorithm creates a scene classification, where pixels als classified in some broad classes: Here, clouds are classified into 'cloud probability masks', which are in general more precise than the level 1C cloud masks. Exercise: Visualize cloud masks Visualize the cloud masks. If you look at the cloud masks, you will see that these are not very precise. These cloud masks are useful for rough estimations. Later we will see alternative ways to identify cloud pixels more precise.","title":"Intermezzo: Cloud Masks"},{"location":"P1/P2-image-preprocessing.html#resampling","text":"In order to display the other band combinations, some geometrical pre-processing is necessary. The bands have to be resampled to an equal resolution. The goal is to resample the image bands to 10m (you can take B2, B3, B4 or B8 as a reference band). This means that all other bands will be upsampled. Image resampling scheme. Top: upsampling (nearest neighbor). Bottom: Downsampling (minimum). Exercise: resampling In the product explorer, select the outcome image of Sen2Cor. Go to Raster > Geometric operations > Resampling . Select the \u2018Save as\u2026 BEAM-DIMAP\u2019 box. Browse to your directory. Choose a logical name for the target product. Resampling Parameters: Choose a reference band that has a resolution of 10m, or choose for a pixel resolution of 10m. Use an upsampling method of your choice (Read the help for more details on the different algorithms). Run resampling . Saving the images takes a lot of time. Again, be patient!","title":"Resampling"},{"location":"P1/P2-image-preprocessing.html#image-subsetting","text":"Processing an entire Sentinel-2 image takes a lot of processing capacity and time (as you probably have noted already). Therefore, you will now learn how to only process a small part of the image. You can choose to reduce the spatial extent of the image, or you can choose to reduce the amount of bands in the image, or a combination of both. An important aspect is that creating a subset is only possible for bands that have the same size. Thus, this will only be possible after resampling . Exercise: subsetting an image Select the resampled image in the product explorer. Go to Raster > Subset. Select a spatial subset by choice (by adjusting the scene start and end). Make sure your spatial extent is substantially smaller than the original image. Snap Subsetting screen. Select only following bands: [B2, B3, B4, B5, B6, B7, B8, B8A, B11, B12] You can see an estimation of the new required storage space. Snap Subsetting screen. Click OK Another option to make a subset is \u2018Spatial subset from view\u2019. Zoom in on your image. Rightclick and select \u2018Spatial subset from view\u2019. FYI: it is also possible to take a subset of an image, based on a vector layer.","title":"Image Subsetting"},{"location":"P1/P2-image-preprocessing.html#mosaicing","text":"Mosaicing is the merging of several arbitrarily shaped images and often used to merge two neighbouring satellite images. Exercise: mosaicing Download an image that is located next to the image you are already working with, dating from the same time as the original image was taken. You can download it directly in Level 2A, thus skipping the sen2cor atmospheric correction. Resample the image. Go to raster > Geometric operations > Mosaicing Snap mosaicing screen. Add the two source products. Choose the directory in which you want to save the mosaic image. In the Map Projection Definition you can choose the Coordinate Reference System (CRS). Choose for UTM/WGS84 (automatic) Choose for a resolution of 10m. The input products don\u2019t need to be orthorectified (because they already are). In the tab \u2018Variables and Conditions\u2019, click the - symbol. Select Band 2,3,4 and 8 Run Mosaicing. Open the RGB-image of the product. Compare it to the two original images. Extra: Examine the example of Landsat satellite image after merging below. What went wrong when mosaicing images 1 and 2? Why is there a colour difference in 2 and 3? Why is there no observable colour difference in 2 and 4? Have you any idea how to eliminate the colour difference between 2 and 3, given that neighbouring satellite images always partly overlap? Landsat images mosaic","title":"Mosaicing"},{"location":"P2/P2-Cloud_masking.html","text":"Cloud Masking Wolkbedekking is een grote barri\u00e8re tijdens het analyseren en processen van (spectrale) satellietbeelden. Recente satellietdata komen veelal ook met automatische classificaties van de wolkbedekking, waardoor deze relatief eenvoudig uit het beeld verwijderd kunnen worden. Earth engine bevat naast deze standaard \u2018cloud masks\u2019 ook algoritmes om de wolken en wolkschaduw te verwijderen uit het beeld. Een keten van filter, maskeer en reduce strategi\u00ebn kan de aanwezigheid van wolken minimaliseren. Volgende 3 stappen kunnen onderdeel zijn van deze keten: Filteren op maximaal wolkenpercentage Cloudmasking algoritme toepassen om wolken te verwijderen Reduceren met een mediane reducer van de resterende collectie 1. Filteren van de ImageCollection op wolkbedekking Een eerste optie is om een beeldcollectie te filteren (zie voorgaand ) op wolkbedekking, waardoor enkel de beelden binnen een paalde range van wolkenpercentages worden weerhouden: // Filteren van de Landsat 9 collectie tot beelden met maximaal 40% wolkbedekking L9 = L9 . filterMetadata ( 'CLOUD_COVER' , 'less_than' , 40 ) FilterMetaData Bij de voorgande filters gebruikten we de redelijk eenvoudige functies .filterBounds() en .filterDate() , twee standaardfilters om op respectievelijk locatie (van een geometrie) en datum te filter. De functie .filterMetadata() wordt gebruikt om te filteren op eender welke Metadata-eigenschap dat een beeld bevat. Gebruik de Docs om het gebruik van deze functie verder te bekijken. Beschikbare metadata kan steeds in de Earth Engine Catalog worden geraadpleegd. Voor Landsat 9: https://developers.google.com/earth-engine/datasets/catalog/LANDSAT_LC09_C02_T1_L2#image-properties . 2. Cloud Masks Als 2e stap kunnen de overgebleven wolken/wolkschaduwen per beeld worden \u2018geknipt\u2019 (cloudmask) door deze pixels naar een waarde 0 om te zetten. Voor Landsat 8 en 9 wordt dit gedaan op basis van het CFMask algoritme, dat automatishe detecties van wolken, wolkschaduwen en sneeuw of ijs nastreeft. Dit resultaat zit vervat in de metadata van elk beeld als binair raster, wat gebruikt kan worden om de wolken weg te knippen. Voor Sentinel-2 wordt een gelijkaardig algoritme toegepast. Toepassen van de cloudmask voor Landsat 9: // 1. Voeg een extra filter in obv wolkbedekking ('Cloud_cover') L9 = L9 . filterMetadata ( 'CLOUD_COVER' , 'less_than' , 40 ) // Definieren van CloudMask-functie (gegeven) function maskL89sr ( image ) { // Gebaseerd op de QA-waarde, wat de uitkomst is van het FMASK algoritme // Develop masks for unwanted pixels (fill, cloud, cloud shadow). // De waarden voor de eerste 4 QA_pixelbanden moet gelijk zijn aan 0 (dus geen wolken/schaduw aanwezig) var qaMask = image . select ( 'QA_PIXEL' ). bitwiseAnd ( parseInt ( '11111' , 2 )). eq ( 0 ); var saturationMask = image . select ( 'QA_RADSAT' ). eq ( 0 ); // Apply masks. return image . updateMask ( qaMask ). updateMask ( saturationMask ); } // Pas de functie over elk beeld binnen de collectie toe met de .map-functie: var L9_masked = L9 . map ( maskL89sr ); // Eerste beeld uit collectie zonder Cloudmask: Map . addLayer ( L9 . first (), trueColor , 'L9 - 1e beeld - No Cloudmask' ) // Eerste beeld uit collectie m\u00e9t Cloudmask: Map . addLayer ( L9_masked . first (), trueColor , 'L9 - 1e beeld - met Cloudmask' ) Resulterend is een ImageCollectie met dezelfde beelden, maar waaruit de wolken gemaskeerd zijn (mask toegepast). Echter kunnen wel sommige wolkenranden nog zichtbaar zijn, die de mask-functies hebben gemist. OPDRACHT 3.3 Maak de L9_masked collectie aan, en neem hiervan een .median() reducer. Visualiseer dit beeld. Merk je een verbetering in vergelijking met de voorgande .median()-gereduceerde beelden, zonder de cloudmask ? De .map()-functie In bovenstaand voorbeeld werd de cloudmask-functie toegepast door gebruik te maken van .map() . D .map() wordt steeds gebruikt om een functie (die op afzonderlijke beelden dient toegepast te worden, zoals maskL9sr ) toe te passen over elk beeld binnen een ImageCollection afzonderlijk. Het is als het ware een veel effici\u00ebnte manier dan de aangemaakte functie te itereren via een for-loop. EXTRA: Sentinel-2 Cloud Masking optie 2 met S2Cloudless Onderstaande Sentinel-2 cloudmask-procedure is ter aanvulling van bovenstaande principes. Het betreft een relatief rest open-source cloudmask-algoritme dat gebruik maakt van een externe detector. Resultaten zijn doorgaans accurater dan de \"standaard\" cloud-masking functie gegeven bij de Sentinel-2 collectie. Er kan voor komende oefeningen/ het praktisch examen met beide procedures gewerkt worden, dus zoals wat in Cloud Masking met Cloudmasks werd gebruikt. Deze Sentinel-2 cloudmasking functie steunt op een afzonderlijke collectie: Sentinel-2 Cloud Probablity . Het wordt opgeroepen op basis van 2 functies: getS2_SR_CLOUD_PROBABILITY : dat zowel de Sentinel-2 Surface Reflectance collectie oproept als de 'S2 cloud probability' collectie. Deze functie behoeft dus geen parameters en geeft een ImageCollectie als resultaat waarbij beide collecties met elkaar gemerged zijn per beeld. maskClouds : dat op basis van de cloudprobability een cloudmask aanmaakt en toepast. Om dus tot een collectie te komen waarbij de 'cloudmask' is toegepast, gebruik je dus onderstaande code: var getS2_SR_CLOUD_PROBABILITY = function () { var innerJoined = ee . Join . inner (). apply ({ primary : ee . ImageCollection ( \"COPERNICUS/S2_SR_HARMONIZED\" ), secondary : ee . ImageCollection ( \"COPERNICUS/S2_CLOUD_PROBABILITY\" ), condition : ee . Filter . equals ({ leftField : 'system:index' , rightField : 'system:index' }) }); var mergeImageBands = function ( joinResult ) { return ee . Image ( joinResult . get ( 'primary' )) . addBands ( joinResult . get ( 'secondary' )); }; var newCollection = innerJoined . map ( mergeImageBands ); return ee . ImageCollection ( newCollection ); }; // Mask out clouds en scaling factor Sentinel-2 var maskClouds = function ( image ) { var cloudProbabilityThreshold = 40 ; var cloudMask = image . select ( 'probability' ). lt ( cloudProbabilityThreshold ); return image . updateMask ( cloudMask ). multiply ( 0.0001 ); }; var S2_coll = getS2_SR_CLOUD_PROBABILITY () . filterMetadata ( 'CLOUDY_PIXEL_PERCENTAGE' , 'less_than' , 50 ) //Voorselectie obv wolken . filterDate ( '2022-08-01' , '2022-10-15' ) . map ( maskClouds ) Vervolgens kun je met S2_coll verder werken.","title":"Cloud masking"},{"location":"P2/P2-Cloud_masking.html#cloud-masking","text":"Wolkbedekking is een grote barri\u00e8re tijdens het analyseren en processen van (spectrale) satellietbeelden. Recente satellietdata komen veelal ook met automatische classificaties van de wolkbedekking, waardoor deze relatief eenvoudig uit het beeld verwijderd kunnen worden. Earth engine bevat naast deze standaard \u2018cloud masks\u2019 ook algoritmes om de wolken en wolkschaduw te verwijderen uit het beeld. Een keten van filter, maskeer en reduce strategi\u00ebn kan de aanwezigheid van wolken minimaliseren. Volgende 3 stappen kunnen onderdeel zijn van deze keten: Filteren op maximaal wolkenpercentage Cloudmasking algoritme toepassen om wolken te verwijderen Reduceren met een mediane reducer van de resterende collectie","title":"Cloud Masking"},{"location":"P2/P2-Cloud_masking.html#1-filteren-van-de-imagecollection-op-wolkbedekking","text":"Een eerste optie is om een beeldcollectie te filteren (zie voorgaand ) op wolkbedekking, waardoor enkel de beelden binnen een paalde range van wolkenpercentages worden weerhouden: // Filteren van de Landsat 9 collectie tot beelden met maximaal 40% wolkbedekking L9 = L9 . filterMetadata ( 'CLOUD_COVER' , 'less_than' , 40 ) FilterMetaData Bij de voorgande filters gebruikten we de redelijk eenvoudige functies .filterBounds() en .filterDate() , twee standaardfilters om op respectievelijk locatie (van een geometrie) en datum te filter. De functie .filterMetadata() wordt gebruikt om te filteren op eender welke Metadata-eigenschap dat een beeld bevat. Gebruik de Docs om het gebruik van deze functie verder te bekijken. Beschikbare metadata kan steeds in de Earth Engine Catalog worden geraadpleegd. Voor Landsat 9: https://developers.google.com/earth-engine/datasets/catalog/LANDSAT_LC09_C02_T1_L2#image-properties .","title":"1. Filteren van de ImageCollection op wolkbedekking"},{"location":"P2/P2-Cloud_masking.html#2-cloud-masks","text":"Als 2e stap kunnen de overgebleven wolken/wolkschaduwen per beeld worden \u2018geknipt\u2019 (cloudmask) door deze pixels naar een waarde 0 om te zetten. Voor Landsat 8 en 9 wordt dit gedaan op basis van het CFMask algoritme, dat automatishe detecties van wolken, wolkschaduwen en sneeuw of ijs nastreeft. Dit resultaat zit vervat in de metadata van elk beeld als binair raster, wat gebruikt kan worden om de wolken weg te knippen. Voor Sentinel-2 wordt een gelijkaardig algoritme toegepast. Toepassen van de cloudmask voor Landsat 9: // 1. Voeg een extra filter in obv wolkbedekking ('Cloud_cover') L9 = L9 . filterMetadata ( 'CLOUD_COVER' , 'less_than' , 40 ) // Definieren van CloudMask-functie (gegeven) function maskL89sr ( image ) { // Gebaseerd op de QA-waarde, wat de uitkomst is van het FMASK algoritme // Develop masks for unwanted pixels (fill, cloud, cloud shadow). // De waarden voor de eerste 4 QA_pixelbanden moet gelijk zijn aan 0 (dus geen wolken/schaduw aanwezig) var qaMask = image . select ( 'QA_PIXEL' ). bitwiseAnd ( parseInt ( '11111' , 2 )). eq ( 0 ); var saturationMask = image . select ( 'QA_RADSAT' ). eq ( 0 ); // Apply masks. return image . updateMask ( qaMask ). updateMask ( saturationMask ); } // Pas de functie over elk beeld binnen de collectie toe met de .map-functie: var L9_masked = L9 . map ( maskL89sr ); // Eerste beeld uit collectie zonder Cloudmask: Map . addLayer ( L9 . first (), trueColor , 'L9 - 1e beeld - No Cloudmask' ) // Eerste beeld uit collectie m\u00e9t Cloudmask: Map . addLayer ( L9_masked . first (), trueColor , 'L9 - 1e beeld - met Cloudmask' ) Resulterend is een ImageCollectie met dezelfde beelden, maar waaruit de wolken gemaskeerd zijn (mask toegepast). Echter kunnen wel sommige wolkenranden nog zichtbaar zijn, die de mask-functies hebben gemist.","title":"2. Cloud Masks"},{"location":"P2/P2-Cloud_masking.html#opdracht-33","text":"Maak de L9_masked collectie aan, en neem hiervan een .median() reducer. Visualiseer dit beeld. Merk je een verbetering in vergelijking met de voorgande .median()-gereduceerde beelden, zonder de cloudmask ? De .map()-functie In bovenstaand voorbeeld werd de cloudmask-functie toegepast door gebruik te maken van .map() . D .map() wordt steeds gebruikt om een functie (die op afzonderlijke beelden dient toegepast te worden, zoals maskL9sr ) toe te passen over elk beeld binnen een ImageCollection afzonderlijk. Het is als het ware een veel effici\u00ebnte manier dan de aangemaakte functie te itereren via een for-loop.","title":"OPDRACHT 3.3"},{"location":"P2/P2-Cloud_masking.html#extra-sentinel-2-cloud-masking-optie-2-met-s2cloudless","text":"Onderstaande Sentinel-2 cloudmask-procedure is ter aanvulling van bovenstaande principes. Het betreft een relatief rest open-source cloudmask-algoritme dat gebruik maakt van een externe detector. Resultaten zijn doorgaans accurater dan de \"standaard\" cloud-masking functie gegeven bij de Sentinel-2 collectie. Er kan voor komende oefeningen/ het praktisch examen met beide procedures gewerkt worden, dus zoals wat in Cloud Masking met Cloudmasks werd gebruikt. Deze Sentinel-2 cloudmasking functie steunt op een afzonderlijke collectie: Sentinel-2 Cloud Probablity . Het wordt opgeroepen op basis van 2 functies: getS2_SR_CLOUD_PROBABILITY : dat zowel de Sentinel-2 Surface Reflectance collectie oproept als de 'S2 cloud probability' collectie. Deze functie behoeft dus geen parameters en geeft een ImageCollectie als resultaat waarbij beide collecties met elkaar gemerged zijn per beeld. maskClouds : dat op basis van de cloudprobability een cloudmask aanmaakt en toepast. Om dus tot een collectie te komen waarbij de 'cloudmask' is toegepast, gebruik je dus onderstaande code: var getS2_SR_CLOUD_PROBABILITY = function () { var innerJoined = ee . Join . inner (). apply ({ primary : ee . ImageCollection ( \"COPERNICUS/S2_SR_HARMONIZED\" ), secondary : ee . ImageCollection ( \"COPERNICUS/S2_CLOUD_PROBABILITY\" ), condition : ee . Filter . equals ({ leftField : 'system:index' , rightField : 'system:index' }) }); var mergeImageBands = function ( joinResult ) { return ee . Image ( joinResult . get ( 'primary' )) . addBands ( joinResult . get ( 'secondary' )); }; var newCollection = innerJoined . map ( mergeImageBands ); return ee . ImageCollection ( newCollection ); }; // Mask out clouds en scaling factor Sentinel-2 var maskClouds = function ( image ) { var cloudProbabilityThreshold = 40 ; var cloudMask = image . select ( 'probability' ). lt ( cloudProbabilityThreshold ); return image . updateMask ( cloudMask ). multiply ( 0.0001 ); }; var S2_coll = getS2_SR_CLOUD_PROBABILITY () . filterMetadata ( 'CLOUDY_PIXEL_PERCENTAGE' , 'less_than' , 50 ) //Voorselectie obv wolken . filterDate ( '2022-08-01' , '2022-10-15' ) . map ( maskClouds ) Vervolgens kun je met S2_coll verder werken.","title":"EXTRA: Sentinel-2 Cloud Masking optie 2 met S2Cloudless"},{"location":"P2/P2-DataCatalog.html","text":"De Earth Engine Data Catalog Om het aanbod aan aardobservatie-data in Google Earth Engine te bekijken en te doorzoeken, kan gebruik gemaakt worden van de Earth Engine Data Catalog: https://developers.google.com/earth-engine/datasets . Via deze catalogus kun je eenvoudig rasterdata allerhande opzoeken: satellietdata, weerdata, terreindata, populatiedata,... Via de catalogus vindt je ook de noodzakelijke code om de beeldensets in je script te importeren vinden. In de komende voorbeeldoefening maken we gebruik van Landsat data. In Earth Engine zijn Landsatbeelden in eerste instantie opgedeeld op basis van Collecties: Collection 2 : omvat de volledige Landsat collectie volgens de recent (April 2021) geoptimaliseerde preprocessing-keten en opslagstructuur van de USGS. Je kiest dus voor nieuwe scripts/oefeningen voor deze collectie. Collection 1 : omvat de collectie van Landsatbeelden volgens de oude procedures. Deze collectie is nog steeds beschikbaar als overgingmaatregeling, maar werd vanaf 1 januari 2022 volledig vervangen. Gebruik hierdoor steeds collectie 2 om fouten te vermijden. Een tweede opdeling van de landsatcollectie gebeurd op basis van de de uitgevoerde correcties. Elk beeld is dus beschikbaar in 3 vormen: 'Surface reflectance' : atmosferisch gecorrigeerde beelden: 'Bottom of Atmosphere'. 'Top-Of-Atmosphere' : niet atmosferisch gecorrigeerd, wel radiometrisch gecalibreerd. 'Raw Images' : niet radiometrisch gecalibreerd. Een derde opdeling gebeurt ten slotte op basis van de beeldkwaliteit: Tier 1 : De meest kwalitatieve beelden, geschikt voor tijdserie-analyse. De beelden zijn zowel geometrisch als radiometrisch kwalitatief goed bevonden volgens opgestelde standaarden. Tier 2 : De beelden zijn geometrisch en/of radiometrisch minder kwalitatief bevonden, maar zijn wel nog inzetbaar voor bepaalde doeleinden. Tier 1 + Real-Time : De Tier-1 database uitgebreid met de meest recente data die nog niet kwalitatief gekeurd zijn en bijgevolg dus nog \"fouten\" kunnen bevatten. (Enkel als TOA beschikbaar) Het Landsat programma Landsat is het langst lopende aardobservatie satellietprogramma en is sinds 1972 continue operationeel. Het is een samenwerking tussen de United States Geological Survey (USGS) en de NASA. Op 27 september 2021 werd de Landsat 9 gelanceerd en is daarmee de meest recente Landsat-satelliet. De data van Landsat 9 is sinds 2022 beschikbaar. Onderstaande grafiek geeft een overzicht van de bandverdeling van de Landsatsatellieten. Huidig actieve Landsat-satellieten zijn Landsat 9 (OLI-2/TIRS-2) en 8 (OLI/TIRS). De sensor van Landsat 7 ging eind september 2022 op pensioen na 23 jaar dienst. (Bron: NASA )","title":"EarthEngine data catalog"},{"location":"P2/P2-DataCatalog.html#de-earth-engine-data-catalog","text":"Om het aanbod aan aardobservatie-data in Google Earth Engine te bekijken en te doorzoeken, kan gebruik gemaakt worden van de Earth Engine Data Catalog: https://developers.google.com/earth-engine/datasets . Via deze catalogus kun je eenvoudig rasterdata allerhande opzoeken: satellietdata, weerdata, terreindata, populatiedata,... Via de catalogus vindt je ook de noodzakelijke code om de beeldensets in je script te importeren vinden. In de komende voorbeeldoefening maken we gebruik van Landsat data. In Earth Engine zijn Landsatbeelden in eerste instantie opgedeeld op basis van Collecties: Collection 2 : omvat de volledige Landsat collectie volgens de recent (April 2021) geoptimaliseerde preprocessing-keten en opslagstructuur van de USGS. Je kiest dus voor nieuwe scripts/oefeningen voor deze collectie. Collection 1 : omvat de collectie van Landsatbeelden volgens de oude procedures. Deze collectie is nog steeds beschikbaar als overgingmaatregeling, maar werd vanaf 1 januari 2022 volledig vervangen. Gebruik hierdoor steeds collectie 2 om fouten te vermijden. Een tweede opdeling van de landsatcollectie gebeurd op basis van de de uitgevoerde correcties. Elk beeld is dus beschikbaar in 3 vormen: 'Surface reflectance' : atmosferisch gecorrigeerde beelden: 'Bottom of Atmosphere'. 'Top-Of-Atmosphere' : niet atmosferisch gecorrigeerd, wel radiometrisch gecalibreerd. 'Raw Images' : niet radiometrisch gecalibreerd. Een derde opdeling gebeurt ten slotte op basis van de beeldkwaliteit: Tier 1 : De meest kwalitatieve beelden, geschikt voor tijdserie-analyse. De beelden zijn zowel geometrisch als radiometrisch kwalitatief goed bevonden volgens opgestelde standaarden. Tier 2 : De beelden zijn geometrisch en/of radiometrisch minder kwalitatief bevonden, maar zijn wel nog inzetbaar voor bepaalde doeleinden. Tier 1 + Real-Time : De Tier-1 database uitgebreid met de meest recente data die nog niet kwalitatief gekeurd zijn en bijgevolg dus nog \"fouten\" kunnen bevatten. (Enkel als TOA beschikbaar) Het Landsat programma Landsat is het langst lopende aardobservatie satellietprogramma en is sinds 1972 continue operationeel. Het is een samenwerking tussen de United States Geological Survey (USGS) en de NASA. Op 27 september 2021 werd de Landsat 9 gelanceerd en is daarmee de meest recente Landsat-satelliet. De data van Landsat 9 is sinds 2022 beschikbaar. Onderstaande grafiek geeft een overzicht van de bandverdeling van de Landsatsatellieten. Huidig actieve Landsat-satellieten zijn Landsat 9 (OLI-2/TIRS-2) en 8 (OLI/TIRS). De sensor van Landsat 7 ging eind september 2022 op pensioen na 23 jaar dienst. (Bron: NASA )","title":"De Earth Engine Data Catalog"},{"location":"P2/P2-Goals.html","text":"Doel van dit practicum In dit practicum maken we kennis met het Google Earth Engine. We behandelen hoe data kan opgezocht en gevisualiseerd worden en hoe data over een bepaalde tijdsperiode te aggregeren. Hiervoor maken we in enkele voorbeelde gebruik van zowel Sentinel-2 multispectrale beelden als Landsat-8 beelden. Voorbereiding Voor dit practicum heb je enkel een laptop/PC nodig waarop - bij voorkeur - Google Chrome op is ge\u00efnstalleerd. Verder heb je een Google Earth Engine account nodig. Deze kun je gratis aanmaken via https://earthengine.google.com/new_signup/ . Indien je dit nog niet hebt gedaan, dien je dit eerst te doen.","title":"Doel van het practicum"},{"location":"P2/P2-Goals.html#doel-van-dit-practicum","text":"In dit practicum maken we kennis met het Google Earth Engine. We behandelen hoe data kan opgezocht en gevisualiseerd worden en hoe data over een bepaalde tijdsperiode te aggregeren. Hiervoor maken we in enkele voorbeelde gebruik van zowel Sentinel-2 multispectrale beelden als Landsat-8 beelden.","title":"Doel van dit practicum"},{"location":"P2/P2-Goals.html#voorbereiding","text":"Voor dit practicum heb je enkel een laptop/PC nodig waarop - bij voorkeur - Google Chrome op is ge\u00efnstalleerd. Verder heb je een Google Earth Engine account nodig. Deze kun je gratis aanmaken via https://earthengine.google.com/new_signup/ . Indien je dit nog niet hebt gedaan, dien je dit eerst te doen.","title":"Voorbereiding"},{"location":"P2/P2-ImageVisualization.html","text":"Visualisatie van een enkelvoudig satellietbeeld Laten we simpel starten met het afbeelden van een enkel rasterbeeld. In Practicum 2 gingen we te werk met een Sentinel-2 beeld van de Braziliaanse stad B\u00e9lem uit 2021. Aangezien de volledige Sentinel-bibliotheek beschikbaar is binnen Earth Engine, kan dit beeld eenvoudig worden ingeladen. Bekijk hiervoor eerst de naam nog eens van je gedownload S2-bestand, bijvoorbeeld: S2B_MSIL1C_ 20200808T134219_N0209_R124_T22MGD _20200808T153444.SAFE In Earth Engine is het vette gedeelte van de filenaam belangrijk. Dit wordt als volgt in earth-engine ingeladen, via 'ee.Image' : //Voorbeeld: Sentinel-2 beeld van vorig practicum var S2_Belem = ee . Image ( 'COPERNICUS/S2_SR/20200808T134219_20200808T134214_T22MGD' ) print ( S2_Belem ) // Zoom in de Map-view in naar het beeld, met Zoom-factor 9 Map . centerObject ( S2_Belem , 9 ); Hiermee werd slechts een variabele aangemaakt die het beeld omvat. Om het beeld te visualiseren wordt gebruik gemaakt van de functie Map.addLayer() : //Visualiseren van het satellietbeeld Map . addLayer ( S2_Belem ); Bij het uitvoeren van bovenstaande code bekomen we een zwart vlak, niet bepaald de visualisatie die we wensen. Bij het uitvoeren van bovenstaande code bekomen we een zwart vlak, niet bepaald de visualisatie die we wensen. Dit komt omdat we nog geen visualisatieparameters hebben aangegeven, waardoor de eerste 3 banden naar de rode, groene en blauwe band respectievelijk worden toegekend en de pixelrange zo groot is dat alle pixels een zwarte kleur krijgen. Om dit manueel aan te passen, zoek je je toegevoegde laag in 'Layers' in de Map-view. Klik op het tandwieltje. Een visualisatie-scherm springt open. Pas de parameters aan, zodat je een normale kleurencomposiet verkrijgt, met een stretch van 3 sigma en druk op 'Apply'. Een visueel beter resultaat wordt verkregen. Image stretching Verschillende stretch opties laten toe de histogrammen van het beeld te strechten om een betere visualisatie te krijgen. De stretch wordt uitgevoerd op basis van de huidige map view: ben je bijvoorbeeld ingezoomd om een stuk homogeen bos, wordt de stretch hierbinnen uitgevoerd. Instellen van de visualisatieparameters kan via 'Layers' in de Map view. Het is echter niet handig om steeds opnieuw de visualisatie handmatig in te stellen. Gelukkig kan deze ook als code ge\u00efmporteerd worden in GEE (klik op 'Import'). De visualisatieparameters worden toegevoegd in de Imports. Deze kunnen dan in de Map.addLayer() -functie worden meegeven tijdens het visualiseren. In de code-editor zelf kunnen de visualisatieparameters eveneens gedefinieerd worden als een Object. // Aanmaken van visualizatieparameters var visualization = { min : 0 , max : 3000 , bands : [ 'B4' , 'B3' , 'B2' ], }; Map . centerObject ( S2_Belem , 9 ); Map . addLayer ( S2_Belem , visualization , 'B\u00e8lem_met_Vis' ); Beeldcollecties zoeken en filteren In voorgaande paragraaf visualiseerden we een Sentinel-2 beeld die we reeds hadden opgezocht waarvan wisten dat de kwaliteit goed zat \u00e9n waarvan we de bestandsnaam reeds kenden. Het is natuurlijk niet handig om steeds een filenaam te moeten kennen om verder te kunnen werken in Earth Engine. Daarmee zouden we ook de geweldige kracht van het programma om doorheen vele petabytes aan aardobservatiedata te zoeken onbenut laten. In wat volgt gaan we op basis van een locatie op zoek gaan naar geschikte satellietbeelden, door het filteren van gehele beeldcollecties. Region of Interest (ROI) Starten doen we met het intekenen van een gewenste Region Of Interest (ROI) in de Map View. Een ROI is niets anders dan de afbakening van het studiegebied, waarbinnen we onze data wensen te verkrijgen. Er kan rechtstreeks gezoomd worden naar een locatie via de zoekbalk bovenaan of door het scrollen met de muis. Teken vervolgs een gewenste gebied in door gebruik te maken van de toolknoppen in de \"Map View\": . In dit voorbeeld kiezen we voor de Konigin der badsteden, Oostende, als studiegebied: Automatisch wordt een nieuwe variabele aangemaakt onder de naam 'geometry', welke eenvoudig hernoemd kan worden naar een eenvoudig te gebruiken variabelenaam: Bekijk de eigenschappen van de polygoon door het naar de console te printen: //Polygoon-informatie naar de console schrijven: print ( Oostende ) Inlezen en filteren van een ImageCollection Voor deze oefening maken we als afwisseling gebruik van Landsat 9 beelden (zie ook het stukje omtrent de Earth Engine data catalog ). De code om de Landsat 9 collectie te importeren kan gekopieerd worden uit de data catalog en ziet er als volgt uit: var L9 = ee . ImageCollection ( \"LANDSAT/LC09/C02/T1_L2\" ) print ( 'Grootte van de L9-collectie :' , L9 . size ()) Hiermee verwijst de variabele 'L9' naar de volledige Landsat-9 collectie (surface reflectance). De '.size()'-functie berekent het aantal beelden dat in deze collectie zijn begrepen. Een hele hoop, sinds de collectie alle L9-beelden van de volledige aarde omvat. Om hier verder mee te werken dient de verzameling bijgevolg gefilterd te worden tot ons interessegebied en tijdstip. Filteren kan op basis van de metadata: //Filteren o.b.v. datum, locatie: var L8 = L8 . filterDate ( '2022-01-01' , '2022-10-15' ) //Op basis van datum . filterBounds ( Oostende ) //op basis van locatie (de AOI); //Printen van de nieuwe grootte print ( 'L9 size na filtering' , L9 . size ()) // Printen van de collectie voor inspectie print ( 'Filtered collection: ' , L9 ) De Landsat Surface Reflectance dataset van Landsat 8 is al atmosferisch gecorrigeerd, maar nog niet geschaald naar een 0-1 range (reden: effici\u00ebntere data-opslag). Op dit te doen, moet eerst een 'herschalingsfunctie' worden gedefinieerd en toegepast. // Toepassen schalingswaarden. function applyScaleFactors ( image ) { var opticalBands = image . select ( 'SR_B.' ). multiply ( 0.0000275 ). add ( - 0.2 ); var thermalBands = image . select ( 'ST_B.*' ). multiply ( 0.00341802 ). add ( 149.0 ); return image . addBands ( opticalBands , null , true ) . addBands ( thermalBands , null , true ); } var L9 = L9 . map ( applyScaleFactors ) De beelden in de collectie zijn standaard gesorteerd op datum. Indien we dus het eerste beeld uit de collectie halen, zal dit het eerste Landsat-9 beeld zijn gemaakt in 2022 van Oostende. Met de functie .first() halen we deze eruit. Print deze naar de console en bekijk het verschil met de de Imagecollectie. // Krijg het eerste (standaard oudste) beeld uit de collectie: var L9_first = L9 . first () print ( 'Eerste Beeld:' , L9_first ) The Landsat Surface Reflectance dataset of Landsat 9 in Google Earth engine is already atmospherically corrected, so we don't need to further preprocess this image. However, the the image still need to be scaled to a 0-1 Surface Reflectance value (due to storage the data is stored as Signed 16-bit integer). javascript Map.addLayer() . Ook nu kunnen we dit als een echte kleurencomposiet visualiseren (voor Landsat 9 betekent dit dus B2 (blauw), B3 (groen) en B4 (rood)). De bandnamen voor Landsat 9 Surface Reflectance (SR) beelden in google earth engine worden genoemd als SR_B*. // Landsat 9 visualisatie instellen. var trueColor = { bands : [ 'SR_B4' , 'SR_B3' , 'SR_B2' ], min : 0 , max : 0.3 , gamma : 1.4 , }; Map . addLayer ( L9_first , trueColor , 'L9_TrueColorComposite' ) Eerste Landsat 9 beeld binnen de gefilterede collectie Mogelijk is dit eerste beeld niet het meest ideale wat betreft de wolkbedekking, waardoor er weinig te zien valt. Laten we nu op zoek gaan naar het beeld met de laagste wolkenbedekking binnen de collectie. Dit doen we in eerste instantie door de collectie te sorteren volgens het percentage cloudcover, wat standaard tot de metadata van een Landsatbeeld behoort. Bekijk het beeld. Wat valt je op? Wordt het volledige gebied bedekt? //Sorteren van de collectie obv cloud cover var L9_sortedCC = L9sort ( 'CLOUD_COVER' , true ); Map . addLayer ( L9_sortedCC . first (), trueColor , 'Least Cloud cover 2022' ) Landsat 9 satellietbeeld met laagste wolkbedekking binnen de gefilterede collectie Bekijk op welke dag de sensor dit beeld heeft genomen. Gebruik hiervoor de \u2018inspector\u2019 om de beeldeigenschappen verder te bekijken. De inspector Opdracht 3.1 - Valse kleurencomposiet voor Gent Visualiseer in een nieuw script een valse kleurencomposiet van een Sentinel-2 beeld (Tier 1, Harmonized Level-2A, Surface Reflectance). Neem hierbij Gent als ROI, met een beeld uit 2021 met de laagste wolkbedekking. Voor het sorteren van de wolkenbedekking, zoek je de gepaste eigenschap om op te sorteren. Deze kun je hier vinden. Bewaar je script. Oplossing GEE script: https://code.earthengine.google.com/d596e4b5b6017e1dedf440f43fc48201","title":"Satellietdata oproepen, filteren en visualiseren"},{"location":"P2/P2-ImageVisualization.html#visualisatie-van-een-enkelvoudig-satellietbeeld","text":"Laten we simpel starten met het afbeelden van een enkel rasterbeeld. In Practicum 2 gingen we te werk met een Sentinel-2 beeld van de Braziliaanse stad B\u00e9lem uit 2021. Aangezien de volledige Sentinel-bibliotheek beschikbaar is binnen Earth Engine, kan dit beeld eenvoudig worden ingeladen. Bekijk hiervoor eerst de naam nog eens van je gedownload S2-bestand, bijvoorbeeld: S2B_MSIL1C_ 20200808T134219_N0209_R124_T22MGD _20200808T153444.SAFE In Earth Engine is het vette gedeelte van de filenaam belangrijk. Dit wordt als volgt in earth-engine ingeladen, via 'ee.Image' : //Voorbeeld: Sentinel-2 beeld van vorig practicum var S2_Belem = ee . Image ( 'COPERNICUS/S2_SR/20200808T134219_20200808T134214_T22MGD' ) print ( S2_Belem ) // Zoom in de Map-view in naar het beeld, met Zoom-factor 9 Map . centerObject ( S2_Belem , 9 ); Hiermee werd slechts een variabele aangemaakt die het beeld omvat. Om het beeld te visualiseren wordt gebruik gemaakt van de functie Map.addLayer() : //Visualiseren van het satellietbeeld Map . addLayer ( S2_Belem ); Bij het uitvoeren van bovenstaande code bekomen we een zwart vlak, niet bepaald de visualisatie die we wensen. Bij het uitvoeren van bovenstaande code bekomen we een zwart vlak, niet bepaald de visualisatie die we wensen. Dit komt omdat we nog geen visualisatieparameters hebben aangegeven, waardoor de eerste 3 banden naar de rode, groene en blauwe band respectievelijk worden toegekend en de pixelrange zo groot is dat alle pixels een zwarte kleur krijgen. Om dit manueel aan te passen, zoek je je toegevoegde laag in 'Layers' in de Map-view. Klik op het tandwieltje. Een visualisatie-scherm springt open. Pas de parameters aan, zodat je een normale kleurencomposiet verkrijgt, met een stretch van 3 sigma en druk op 'Apply'. Een visueel beter resultaat wordt verkregen. Image stretching Verschillende stretch opties laten toe de histogrammen van het beeld te strechten om een betere visualisatie te krijgen. De stretch wordt uitgevoerd op basis van de huidige map view: ben je bijvoorbeeld ingezoomd om een stuk homogeen bos, wordt de stretch hierbinnen uitgevoerd. Instellen van de visualisatieparameters kan via 'Layers' in de Map view. Het is echter niet handig om steeds opnieuw de visualisatie handmatig in te stellen. Gelukkig kan deze ook als code ge\u00efmporteerd worden in GEE (klik op 'Import'). De visualisatieparameters worden toegevoegd in de Imports. Deze kunnen dan in de Map.addLayer() -functie worden meegeven tijdens het visualiseren. In de code-editor zelf kunnen de visualisatieparameters eveneens gedefinieerd worden als een Object. // Aanmaken van visualizatieparameters var visualization = { min : 0 , max : 3000 , bands : [ 'B4' , 'B3' , 'B2' ], }; Map . centerObject ( S2_Belem , 9 ); Map . addLayer ( S2_Belem , visualization , 'B\u00e8lem_met_Vis' );","title":"Visualisatie van een enkelvoudig satellietbeeld"},{"location":"P2/P2-ImageVisualization.html#beeldcollecties-zoeken-en-filteren","text":"In voorgaande paragraaf visualiseerden we een Sentinel-2 beeld die we reeds hadden opgezocht waarvan wisten dat de kwaliteit goed zat \u00e9n waarvan we de bestandsnaam reeds kenden. Het is natuurlijk niet handig om steeds een filenaam te moeten kennen om verder te kunnen werken in Earth Engine. Daarmee zouden we ook de geweldige kracht van het programma om doorheen vele petabytes aan aardobservatiedata te zoeken onbenut laten. In wat volgt gaan we op basis van een locatie op zoek gaan naar geschikte satellietbeelden, door het filteren van gehele beeldcollecties.","title":"Beeldcollecties zoeken en filteren"},{"location":"P2/P2-ImageVisualization.html#region-of-interest-roi","text":"Starten doen we met het intekenen van een gewenste Region Of Interest (ROI) in de Map View. Een ROI is niets anders dan de afbakening van het studiegebied, waarbinnen we onze data wensen te verkrijgen. Er kan rechtstreeks gezoomd worden naar een locatie via de zoekbalk bovenaan of door het scrollen met de muis. Teken vervolgs een gewenste gebied in door gebruik te maken van de toolknoppen in de \"Map View\": . In dit voorbeeld kiezen we voor de Konigin der badsteden, Oostende, als studiegebied: Automatisch wordt een nieuwe variabele aangemaakt onder de naam 'geometry', welke eenvoudig hernoemd kan worden naar een eenvoudig te gebruiken variabelenaam: Bekijk de eigenschappen van de polygoon door het naar de console te printen: //Polygoon-informatie naar de console schrijven: print ( Oostende )","title":"Region of Interest (ROI)"},{"location":"P2/P2-ImageVisualization.html#inlezen-en-filteren-van-een-imagecollection","text":"Voor deze oefening maken we als afwisseling gebruik van Landsat 9 beelden (zie ook het stukje omtrent de Earth Engine data catalog ). De code om de Landsat 9 collectie te importeren kan gekopieerd worden uit de data catalog en ziet er als volgt uit: var L9 = ee . ImageCollection ( \"LANDSAT/LC09/C02/T1_L2\" ) print ( 'Grootte van de L9-collectie :' , L9 . size ()) Hiermee verwijst de variabele 'L9' naar de volledige Landsat-9 collectie (surface reflectance). De '.size()'-functie berekent het aantal beelden dat in deze collectie zijn begrepen. Een hele hoop, sinds de collectie alle L9-beelden van de volledige aarde omvat. Om hier verder mee te werken dient de verzameling bijgevolg gefilterd te worden tot ons interessegebied en tijdstip. Filteren kan op basis van de metadata: //Filteren o.b.v. datum, locatie: var L8 = L8 . filterDate ( '2022-01-01' , '2022-10-15' ) //Op basis van datum . filterBounds ( Oostende ) //op basis van locatie (de AOI); //Printen van de nieuwe grootte print ( 'L9 size na filtering' , L9 . size ()) // Printen van de collectie voor inspectie print ( 'Filtered collection: ' , L9 ) De Landsat Surface Reflectance dataset van Landsat 8 is al atmosferisch gecorrigeerd, maar nog niet geschaald naar een 0-1 range (reden: effici\u00ebntere data-opslag). Op dit te doen, moet eerst een 'herschalingsfunctie' worden gedefinieerd en toegepast. // Toepassen schalingswaarden. function applyScaleFactors ( image ) { var opticalBands = image . select ( 'SR_B.' ). multiply ( 0.0000275 ). add ( - 0.2 ); var thermalBands = image . select ( 'ST_B.*' ). multiply ( 0.00341802 ). add ( 149.0 ); return image . addBands ( opticalBands , null , true ) . addBands ( thermalBands , null , true ); } var L9 = L9 . map ( applyScaleFactors ) De beelden in de collectie zijn standaard gesorteerd op datum. Indien we dus het eerste beeld uit de collectie halen, zal dit het eerste Landsat-9 beeld zijn gemaakt in 2022 van Oostende. Met de functie .first() halen we deze eruit. Print deze naar de console en bekijk het verschil met de de Imagecollectie. // Krijg het eerste (standaard oudste) beeld uit de collectie: var L9_first = L9 . first () print ( 'Eerste Beeld:' , L9_first ) The Landsat Surface Reflectance dataset of Landsat 9 in Google Earth engine is already atmospherically corrected, so we don't need to further preprocess this image. However, the the image still need to be scaled to a 0-1 Surface Reflectance value (due to storage the data is stored as Signed 16-bit integer). javascript Map.addLayer() . Ook nu kunnen we dit als een echte kleurencomposiet visualiseren (voor Landsat 9 betekent dit dus B2 (blauw), B3 (groen) en B4 (rood)). De bandnamen voor Landsat 9 Surface Reflectance (SR) beelden in google earth engine worden genoemd als SR_B*. // Landsat 9 visualisatie instellen. var trueColor = { bands : [ 'SR_B4' , 'SR_B3' , 'SR_B2' ], min : 0 , max : 0.3 , gamma : 1.4 , }; Map . addLayer ( L9_first , trueColor , 'L9_TrueColorComposite' ) Eerste Landsat 9 beeld binnen de gefilterede collectie Mogelijk is dit eerste beeld niet het meest ideale wat betreft de wolkbedekking, waardoor er weinig te zien valt. Laten we nu op zoek gaan naar het beeld met de laagste wolkenbedekking binnen de collectie. Dit doen we in eerste instantie door de collectie te sorteren volgens het percentage cloudcover, wat standaard tot de metadata van een Landsatbeeld behoort. Bekijk het beeld. Wat valt je op? Wordt het volledige gebied bedekt? //Sorteren van de collectie obv cloud cover var L9_sortedCC = L9sort ( 'CLOUD_COVER' , true ); Map . addLayer ( L9_sortedCC . first (), trueColor , 'Least Cloud cover 2022' ) Landsat 9 satellietbeeld met laagste wolkbedekking binnen de gefilterede collectie Bekijk op welke dag de sensor dit beeld heeft genomen. Gebruik hiervoor de \u2018inspector\u2019 om de beeldeigenschappen verder te bekijken. De inspector","title":"Inlezen en filteren van een ImageCollection"},{"location":"P2/P2-ImageVisualization.html#opdracht-31-valse-kleurencomposiet-voor-gent","text":"Visualiseer in een nieuw script een valse kleurencomposiet van een Sentinel-2 beeld (Tier 1, Harmonized Level-2A, Surface Reflectance). Neem hierbij Gent als ROI, met een beeld uit 2021 met de laagste wolkbedekking. Voor het sorteren van de wolkenbedekking, zoek je de gepaste eigenschap om op te sorteren. Deze kun je hier vinden. Bewaar je script. Oplossing GEE script: https://code.earthengine.google.com/d596e4b5b6017e1dedf440f43fc48201","title":"Opdracht 3.1 - Valse kleurencomposiet voor Gent"},{"location":"P2/P2-Intro.html","text":"De Google Earth Engine Interface The Google Earth Engine code editor interface. De interface van de Earth Engine code editor is op zich vrij simpel. Er kunnen 5 grote blokken onderscheden worden: Het linkerpaneel, met 3 tabs: Scripts : je eigen bibliotheek met scripts, onder te verdelen in repositories, folders en scripts. Ook de scripts waar je schrijf- en leesrechten hebt kun je hierin terugvinden. Docs : Bevat informatie over de functies die beschikbaar zijn in Earth Engine. Hier kun je snel de functionaliteiten en beschrijving van de input- en outputparameters terugvinden. Assets : oplijsting met de 'assets' die je opgeladen/aangemaakt hebt in Earth Engine. Assets kunnen rasters of vectoren (met bijvoorbeeld trainingsdata of studiegebied). De code editor zelf in het middenpaneel, waar je scripts kunt aanmaken/bewerken, delen en opslaan. Het rechterpaneel, met 3 tabs: De Console : waar eventuele output of foutmeldingen naar geschreven worden. de 'print()'-functie wordt steeds gebruikt om hier informatie te bekijken. De Inspector : hiermee kun je op specifieke pixels in de 'map view' klikken, waarna de overeenkomstige pixelinformatie wordt gevisualiseerd. De Tasks : bevat een oplijsting van de 'exports' die in het script werden aangemaakt (als je bijvoorbeeld een satellietbeeld naar je Google Drive wenst te sturen). Een export moet hier steeds nog manueel gestart worden. De Map View : waar het beeldmateriaal wordt gevisualiseerd. De zoekfunctie waarmee beeldmateriaal beschikbaar binnen de Google Cloud kan worden opgezocht. Earth Engine code: Javascript 101 Google Earth Engine maakt voor zijn code-editor gebruik van Javascript als programmeertaal, maar om vertrouwd te geraken met GEE hoef je geen Javascript-expert te worden. GEE gebruikt namelijk hoofdzakelijk eigen 'classes' en functionaliteiten, waardoor je slechts een basiskennis javascript nodig hebt. Daarom starten we eerst met een spoedcursus Javascript, waarop we onze verdere 'Earth Engine'-magie kunnen bouwen. \"Hello World\" De 'print'-functie Zoals gebruikelijk is bij het leren van een programmeertaal, groeten we de wereld met ons eerste lijntje code. Open https://code.earthengine.google.com/ , en voeg volgend lijntje toe aan het nieuwe script. //Printen van Hello World print ( 'Hello World' ) Klik daarna op 'Run'. Proficiat! Het eerste scriptje is geschreven. Hiermee heb je onmiddellijk ook een eerste uitermate handige functie gezien. De \u2018print\u2019-functie kun je gebruiken om bepaalde informatie naar de Console te schrijven, zoals metadata, ... . Verder valt hieruit ook op te merken dat een dubbele voorwaartse slash '// ' gebruikt wordt om notities te nemen binnen de code. Strings Proficiat! Het eerste scriptje is geschreven. Laat ons deze string nu onderbrengen in een variabele. In Javascript dient een variabele altijd ge\u00efniteerd te worden met var statement. Indien je dit zou weglaten, zal je op een 'error' stoten. //Aanmaken van de variabele 'aString' var aString = 'Hello World' print ( aString ) Om het datatype van de variabele aString na te gaan, kun je dit oproepen met de functie \u2018typeof()\u2019-statement: // Type van de variabele aString naar de Console schrijven print ( typeof ( aString )) Functies Een functie in Google Earth Engine ziet er uit volgens volgende opbouw: var functienaam = function ( inputvariabelen ) { //Hier de functie-bewerkingen //output = a + b return output }; Bijvoorbeeld: een functie waarbij je een string naar keuze kunt groeten. //Hello Function: var hello_function = function ( String ) { var goeindag = 'Hello ' + String return goeindag }; //Functie uitvoeren: var hallo = hello_function ( 'Boerekot' ); print ( hallo ) //Variabelen aangemaakt binnen de functie worden enkel daar gebruikt. // Ze gebruiken buiten de functie levert dus foutmeldingen op: print ( goeindag ) Lijsten Een lijst in Javascript wordt steeds opgegeven met [ en ]. Een lijstindex begint steeds vanaf '0', waarbij de eerste waarde dus op positie 0 staat. var lievelingsnummers = [ 8 , 6 , 3 , 27 ] print ( 'Eerste lievelingsnummer in de lijst = ' , lievelingsnummers [ 0 ]) //Lijstelementen aanpassen var automerken = [ \"BMW\" , \"Volkswagen\" , \"Minerva\" ] automerken [ 2 ] = [ \"Opel\" ] print ( automerken ) Objecten Een Object wordt aangegeven met '{' en '}'. Aan een object hangen steeds enkele variabelen die tot het object behoren. //object var beelden = { Sensor : \"Sentinel 2\" , Regios : [ \"Belgium\" , \"France\" , \"Vaticano\" ], Aantalbeelden : 2 , 1 : \"Ja\" } Om een eigenschap van een object op te roepen, wordt stees een puntje '.' gebruikt: object.eigenschap. Indien we bijvoorbeeld de sensor van ons aangemaakte beeldmateriaal willen nagaan: // Sensor bekijken print ( beelden . Sensor ) // Andere methode via haakjes [] print ( 'Regios: ' , beelden [ 'Regios' ]) Javascript referenties Het spreekt voor zich dat we hier slechts de basic-syntax van Javascript hebben aangehaald. Het is zeker niet nodig om eerst Javascript onder de knie te krijgen om in Google Earth Engine te kunnen werken. Aangezien Google Earth Engine slechts specifieke codes gebruikt, zul je doorheen de practica het nodige leren. Specifieke Earth Engine objecten ee.Image Een Image is rasterdata bestaande uit \u00e9\u00e9n of meerdere banden, waarvan elke band een eigen naam, datatype, resolutie en projectie heeft. Een enkel Sentinel-2 beeld zoals in Practicum 3 gedownload werd, zal als \u00e9\u00e9n Image kunnen worden opgeslagen. Om een Image in te laden en Earth Engine wordt gebruik gemaakt van ee.Image . In volgend hoofdstuk wordt dit ge\u00efllustreerd. ee.ImageCollection Een ImageCollection is een collectie van meerdere Image 's. De Sentinel-2 MSI Level-2A collectie bevat bijvoorbeeld het volledige aanbod aan atmosferisch gecorrigeerde Sentinel-2 beelden. Elke collectie bevat verdere informatie in de Data Catalog. Een collectie is steeds in een bepaalde volgorde gesorteerd zijn. Standaard is dit o.b.v. datum, maar aangepaste sorteringen zijn eveneens mogelijk, zoals we in een komende oefening gaan zien.","title":"Introductie tot Earth Engine"},{"location":"P2/P2-Intro.html#de-google-earth-engine-interface","text":"The Google Earth Engine code editor interface. De interface van de Earth Engine code editor is op zich vrij simpel. Er kunnen 5 grote blokken onderscheden worden: Het linkerpaneel, met 3 tabs: Scripts : je eigen bibliotheek met scripts, onder te verdelen in repositories, folders en scripts. Ook de scripts waar je schrijf- en leesrechten hebt kun je hierin terugvinden. Docs : Bevat informatie over de functies die beschikbaar zijn in Earth Engine. Hier kun je snel de functionaliteiten en beschrijving van de input- en outputparameters terugvinden. Assets : oplijsting met de 'assets' die je opgeladen/aangemaakt hebt in Earth Engine. Assets kunnen rasters of vectoren (met bijvoorbeeld trainingsdata of studiegebied). De code editor zelf in het middenpaneel, waar je scripts kunt aanmaken/bewerken, delen en opslaan. Het rechterpaneel, met 3 tabs: De Console : waar eventuele output of foutmeldingen naar geschreven worden. de 'print()'-functie wordt steeds gebruikt om hier informatie te bekijken. De Inspector : hiermee kun je op specifieke pixels in de 'map view' klikken, waarna de overeenkomstige pixelinformatie wordt gevisualiseerd. De Tasks : bevat een oplijsting van de 'exports' die in het script werden aangemaakt (als je bijvoorbeeld een satellietbeeld naar je Google Drive wenst te sturen). Een export moet hier steeds nog manueel gestart worden. De Map View : waar het beeldmateriaal wordt gevisualiseerd. De zoekfunctie waarmee beeldmateriaal beschikbaar binnen de Google Cloud kan worden opgezocht.","title":"De Google Earth Engine Interface"},{"location":"P2/P2-Intro.html#earth-engine-code-javascript-101","text":"Google Earth Engine maakt voor zijn code-editor gebruik van Javascript als programmeertaal, maar om vertrouwd te geraken met GEE hoef je geen Javascript-expert te worden. GEE gebruikt namelijk hoofdzakelijk eigen 'classes' en functionaliteiten, waardoor je slechts een basiskennis javascript nodig hebt. Daarom starten we eerst met een spoedcursus Javascript, waarop we onze verdere 'Earth Engine'-magie kunnen bouwen.","title":"Earth Engine code: Javascript 101"},{"location":"P2/P2-Intro.html#hello-world","text":"","title":"\"Hello World\""},{"location":"P2/P2-Intro.html#de-print-functie","text":"Zoals gebruikelijk is bij het leren van een programmeertaal, groeten we de wereld met ons eerste lijntje code. Open https://code.earthengine.google.com/ , en voeg volgend lijntje toe aan het nieuwe script. //Printen van Hello World print ( 'Hello World' ) Klik daarna op 'Run'. Proficiat! Het eerste scriptje is geschreven. Hiermee heb je onmiddellijk ook een eerste uitermate handige functie gezien. De \u2018print\u2019-functie kun je gebruiken om bepaalde informatie naar de Console te schrijven, zoals metadata, ... . Verder valt hieruit ook op te merken dat een dubbele voorwaartse slash '// ' gebruikt wordt om notities te nemen binnen de code.","title":"De 'print'-functie"},{"location":"P2/P2-Intro.html#strings","text":"Proficiat! Het eerste scriptje is geschreven. Laat ons deze string nu onderbrengen in een variabele. In Javascript dient een variabele altijd ge\u00efniteerd te worden met var statement. Indien je dit zou weglaten, zal je op een 'error' stoten. //Aanmaken van de variabele 'aString' var aString = 'Hello World' print ( aString ) Om het datatype van de variabele aString na te gaan, kun je dit oproepen met de functie \u2018typeof()\u2019-statement: // Type van de variabele aString naar de Console schrijven print ( typeof ( aString ))","title":"Strings"},{"location":"P2/P2-Intro.html#functies","text":"Een functie in Google Earth Engine ziet er uit volgens volgende opbouw: var functienaam = function ( inputvariabelen ) { //Hier de functie-bewerkingen //output = a + b return output }; Bijvoorbeeld: een functie waarbij je een string naar keuze kunt groeten. //Hello Function: var hello_function = function ( String ) { var goeindag = 'Hello ' + String return goeindag }; //Functie uitvoeren: var hallo = hello_function ( 'Boerekot' ); print ( hallo ) //Variabelen aangemaakt binnen de functie worden enkel daar gebruikt. // Ze gebruiken buiten de functie levert dus foutmeldingen op: print ( goeindag )","title":"Functies"},{"location":"P2/P2-Intro.html#lijsten","text":"Een lijst in Javascript wordt steeds opgegeven met [ en ]. Een lijstindex begint steeds vanaf '0', waarbij de eerste waarde dus op positie 0 staat. var lievelingsnummers = [ 8 , 6 , 3 , 27 ] print ( 'Eerste lievelingsnummer in de lijst = ' , lievelingsnummers [ 0 ]) //Lijstelementen aanpassen var automerken = [ \"BMW\" , \"Volkswagen\" , \"Minerva\" ] automerken [ 2 ] = [ \"Opel\" ] print ( automerken )","title":"Lijsten"},{"location":"P2/P2-Intro.html#objecten","text":"Een Object wordt aangegeven met '{' en '}'. Aan een object hangen steeds enkele variabelen die tot het object behoren. //object var beelden = { Sensor : \"Sentinel 2\" , Regios : [ \"Belgium\" , \"France\" , \"Vaticano\" ], Aantalbeelden : 2 , 1 : \"Ja\" } Om een eigenschap van een object op te roepen, wordt stees een puntje '.' gebruikt: object.eigenschap. Indien we bijvoorbeeld de sensor van ons aangemaakte beeldmateriaal willen nagaan: // Sensor bekijken print ( beelden . Sensor ) // Andere methode via haakjes [] print ( 'Regios: ' , beelden [ 'Regios' ]) Javascript referenties Het spreekt voor zich dat we hier slechts de basic-syntax van Javascript hebben aangehaald. Het is zeker niet nodig om eerst Javascript onder de knie te krijgen om in Google Earth Engine te kunnen werken. Aangezien Google Earth Engine slechts specifieke codes gebruikt, zul je doorheen de practica het nodige leren.","title":"Objecten"},{"location":"P2/P2-Intro.html#specifieke-earth-engine-objecten","text":"","title":"Specifieke Earth Engine objecten"},{"location":"P2/P2-Intro.html#eeimage","text":"Een Image is rasterdata bestaande uit \u00e9\u00e9n of meerdere banden, waarvan elke band een eigen naam, datatype, resolutie en projectie heeft. Een enkel Sentinel-2 beeld zoals in Practicum 3 gedownload werd, zal als \u00e9\u00e9n Image kunnen worden opgeslagen. Om een Image in te laden en Earth Engine wordt gebruik gemaakt van ee.Image . In volgend hoofdstuk wordt dit ge\u00efllustreerd.","title":"ee.Image"},{"location":"P2/P2-Intro.html#eeimagecollection","text":"Een ImageCollection is een collectie van meerdere Image 's. De Sentinel-2 MSI Level-2A collectie bevat bijvoorbeeld het volledige aanbod aan atmosferisch gecorrigeerde Sentinel-2 beelden. Elke collectie bevat verdere informatie in de Data Catalog. Een collectie is steeds in een bepaalde volgorde gesorteerd zijn. Standaard is dit o.b.v. datum, maar aangepaste sorteringen zijn eveneens mogelijk, zoals we in een komende oefening gaan zien.","title":"ee.ImageCollection"},{"location":"P2/P2-Oefeningen.html","text":"Onderstaande oefeningen kunnen gebruikt worden om P4 verder in te oefenen. Oefening .1 - Area 51 Niveau : gemakkelijk Stappen: Open een nieuw script Laad een Landsat 8 collectie in. Ga voor de beelden met de hoogste kwaliteit. Welke collectie kies je dan? Filter je collectie op basis van volgende gevens: Periode : september 2021 Locatie : Area 51. Hiervoor kun je volgende punt-locatie in je script gebruiken: var Area51 = ee . Geometry . Point ([ - 115.81441562461978 , 37.2386297535804 ]); Wolkbedekking : minder of gelijk aan 10% Hoeveel beelden blijven er nog over die aan bovenstaande criteria voldoen? Van de resterende beeldencollectie neem je het eerste beeld (niet gesorteerd). Bekijk de metadata. Van welke datum is dit beeld afkomstig? Visualiseer het beeld als een Normale Kleuren composiet, een Valse Kleurencomposiet. Je kunt zelf je visualisatieparameters defeni\u00ebren door ze handmatig aan in te stellen. Analyseer het volledige door jezelf volgende vragen te stellen: Waar is er vegetatie te vinden? Waar is dit natuurlijk, waar onnatuurlijk? Welke features herken je thv Area 51? Het gebied geeft ook een ideale aanleiding om de 'Geology'-composiet eens uit te testen. De combinaties is als volgt: RGB = SWIR2-NIR-BLUE . Ga na welke Landsat-8 banden hiervoor benodigd zijn. (Maak gebruik van de Landsat 8 bandentabel ). Deze composiet maakt visuele inspectie van grote structurele eigenschappen van gesteenten (zoals plooien en breuken) gemakkelijker. Oplossing Script: https://code.earthengine.google.com/210e520368aa1cc39ca8e18a51cb71e0 Oefening 4.2 Fires are raging in Bolivia, hitting particularly hard the Chiquitano dry forests of the country\u2019s southern Santa Cruz region. The fires are largely the result of intentional burning to convert forest to farmland. Sources say this practice has recently intensified after Bolivian president Evo Morales signed a decree in July expanding land demarcated for livestock production and the agribusiness sector to include Permanent Forest Production Lands in the regions of Beni and Santa Cruz. Satellite data indicate 2019 may be a banner year for forest loss, with tree cover loss alerts spiking in late August to levels more than double the average of previous years. Human communities are suffering due to the fires, with reports of smoke-caused illnesses and drinking water shortages. Meanwhile, biologists are worried about the plants and animals of the Chiquitano dry forests, many of which are unique, isolated and found nowhere else in the world. GEGEVEN : Startscript met aanduiding van het studiegebied (ROI) https://code.earthengine.google.com/2eba6fb83f6efb634a8286b52fd89bbc GEVRAAGD : Maak een 2 Sentinel-2 beelden aan, met volgende specificaties: - Gebruik van de Sentinel-2 Top-Of-Atmosphere (TOA) collectie. - Gefilterd op het studiegebied (ROI) - Gefilterd op maximale wolkbedekking van 30% - Wolken dienen worden te verwijderd uit de beelden. - Gefilterd op de periodes: - Beeld 1: het jaar 2017 (1 juni t.e.m 30 oktober) - Beeld 2: het jaar 2019 (1 juni t.e.m 30 oktober)) Voor elke pixel de mediane waarde van beide overgebleven collecties SUBVRAAG 1.1 - Hoeveel beelden resteren er nog in beide collecties na filtering? SUBVRAAG 1.2 - Visualiseer een Normale Kleurencomposiet voor beide jaren. ======= Oefening 4.2 Coming Soon","title":"(Extra) Oefeningen"},{"location":"P2/P2-Oefeningen.html#oefening-1-area-51","text":"Niveau : gemakkelijk Stappen: Open een nieuw script Laad een Landsat 8 collectie in. Ga voor de beelden met de hoogste kwaliteit. Welke collectie kies je dan? Filter je collectie op basis van volgende gevens: Periode : september 2021 Locatie : Area 51. Hiervoor kun je volgende punt-locatie in je script gebruiken: var Area51 = ee . Geometry . Point ([ - 115.81441562461978 , 37.2386297535804 ]); Wolkbedekking : minder of gelijk aan 10% Hoeveel beelden blijven er nog over die aan bovenstaande criteria voldoen? Van de resterende beeldencollectie neem je het eerste beeld (niet gesorteerd). Bekijk de metadata. Van welke datum is dit beeld afkomstig? Visualiseer het beeld als een Normale Kleuren composiet, een Valse Kleurencomposiet. Je kunt zelf je visualisatieparameters defeni\u00ebren door ze handmatig aan in te stellen. Analyseer het volledige door jezelf volgende vragen te stellen: Waar is er vegetatie te vinden? Waar is dit natuurlijk, waar onnatuurlijk? Welke features herken je thv Area 51? Het gebied geeft ook een ideale aanleiding om de 'Geology'-composiet eens uit te testen. De combinaties is als volgt: RGB = SWIR2-NIR-BLUE . Ga na welke Landsat-8 banden hiervoor benodigd zijn. (Maak gebruik van de Landsat 8 bandentabel ). Deze composiet maakt visuele inspectie van grote structurele eigenschappen van gesteenten (zoals plooien en breuken) gemakkelijker. Oplossing Script: https://code.earthengine.google.com/210e520368aa1cc39ca8e18a51cb71e0","title":"Oefening .1 - Area 51"},{"location":"P2/P2-Oefeningen.html#oefening-42","text":"Fires are raging in Bolivia, hitting particularly hard the Chiquitano dry forests of the country\u2019s southern Santa Cruz region. The fires are largely the result of intentional burning to convert forest to farmland. Sources say this practice has recently intensified after Bolivian president Evo Morales signed a decree in July expanding land demarcated for livestock production and the agribusiness sector to include Permanent Forest Production Lands in the regions of Beni and Santa Cruz. Satellite data indicate 2019 may be a banner year for forest loss, with tree cover loss alerts spiking in late August to levels more than double the average of previous years. Human communities are suffering due to the fires, with reports of smoke-caused illnesses and drinking water shortages. Meanwhile, biologists are worried about the plants and animals of the Chiquitano dry forests, many of which are unique, isolated and found nowhere else in the world. GEGEVEN : Startscript met aanduiding van het studiegebied (ROI) https://code.earthengine.google.com/2eba6fb83f6efb634a8286b52fd89bbc GEVRAAGD : Maak een 2 Sentinel-2 beelden aan, met volgende specificaties: - Gebruik van de Sentinel-2 Top-Of-Atmosphere (TOA) collectie. - Gefilterd op het studiegebied (ROI) - Gefilterd op maximale wolkbedekking van 30% - Wolken dienen worden te verwijderd uit de beelden. - Gefilterd op de periodes: - Beeld 1: het jaar 2017 (1 juni t.e.m 30 oktober) - Beeld 2: het jaar 2019 (1 juni t.e.m 30 oktober)) Voor elke pixel de mediane waarde van beide overgebleven collecties SUBVRAAG 1.1 - Hoeveel beelden resteren er nog in beide collecties na filtering? SUBVRAAG 1.2 - Visualiseer een Normale Kleurencomposiet voor beide jaren. =======","title":"Oefening 4.2"},{"location":"P2/P2-Oefeningen.html#oefening-42_1","text":"Coming Soon","title":"Oefening 4.2"},{"location":"P2/P2-Reducing.html","text":"Over Reducing \u2018Reducing\u2019 een beeld- of datacollectie in Google Earth Engine is het proces waarbij de beeldcollectie wordt geaggregeerd over tijd, ruimte, banden, .... In dit proces wordt een beeldcomposiet aangemaakt van de beschikbare beelden in de collectie, waarbij per pixel een bepaalde vooropgestelde waarde wordt gekozen, zoals het min, max, gemiddelde, mediaan,\u2026 De collectie wordt als het ware 'gereduceerd' tot \u00e9\u00e9n enkel visualiseerbaar beeld. Reducing an ImageCollection: principe. Een voorbeeld: neem de eerste pixel van de gefilterde en gesorteerde Landsat 8 collectie L9_sortedCC . Visualiseer het resultaat. Wat valt je op? Is ditmaal het volledige gebied bedekt? // Reducer over de L9_sortedCC collectie, waarbij steeds de eerste pixel genomen wordt. var L9_first_red = L9_sortedCC . reduce ( ee . Reducer . first ()); //Bekijk de eigenschappen van het gereduceerd beeld print ( L9_first_red ) var visParams_first = { bands : [ 'SR_B4_first' , 'SR_B3_first' , 'SR_B2_first' ], min : 0 , max : 0.3 , gamma : 1.4 , }; // Visualiseren als een normale kleurencomposiet Map . addLayer ( L9_first_red , visParams_first , 'L9_First pixels' ) Bandbenaming na reducing Let ook, bij het aanroepen van ee.reducer , worden ook de banden hernoemd. Houd hier rekening mee bij het visualiseren. Het eventueel hernoemen van banden kan via de functie .rename() Bandnamen bij de 'First'-gereduceerde collectie. ee.Reducer.first() VS .first() In een eerdere oefening namen we reeds het eerste beeld uit een hele collectie met de .first() functie. Dit is dus niet hetzelfde, gezien een reducer zicht niet beperkt tot \u00e9\u00e9n enkel beeld, maar de volledige collectie gaat reduceren. Shortcut syntax Bepaalde \u2013 veel gebruikte \u2013 reducers hebben ook een zogenaamde \u2018shortcut\u2019 syntax in Earth engine: mean() , median() , min() en sum() kunnen rechtstreeks gebruikt worden. Deze shortcut syntax zorgt ervoor dat een collectie eenvoudiger te reduceren is, zonder de hele .reduce((ee.Reducer.mean()) syntax te moeten gebruiken. Een voorbeeld: //Een Median() Reducer over the Landsat-8 collectie var L9_median = L9 . reduce ( ee . Reducer . median ()); //Of via de short-syntax (geeft zelfde resultaat) var L9_median = L9 . median (); // Visualiseren Map . addLayer ( L9_median , trueColor , 'L9_median' ) Voorbeeld mediane reducer over de L9_sortedCC-collectie Opdracht 3.2 Probeer enkele van de Reducers uit op je Sentinel-2 collectie van Gent. Bewaar je script.","title":"Reducing ImageCollections"},{"location":"P2/P2-Reducing.html#over-reducing","text":"\u2018Reducing\u2019 een beeld- of datacollectie in Google Earth Engine is het proces waarbij de beeldcollectie wordt geaggregeerd over tijd, ruimte, banden, .... In dit proces wordt een beeldcomposiet aangemaakt van de beschikbare beelden in de collectie, waarbij per pixel een bepaalde vooropgestelde waarde wordt gekozen, zoals het min, max, gemiddelde, mediaan,\u2026 De collectie wordt als het ware 'gereduceerd' tot \u00e9\u00e9n enkel visualiseerbaar beeld. Reducing an ImageCollection: principe. Een voorbeeld: neem de eerste pixel van de gefilterde en gesorteerde Landsat 8 collectie L9_sortedCC . Visualiseer het resultaat. Wat valt je op? Is ditmaal het volledige gebied bedekt? // Reducer over de L9_sortedCC collectie, waarbij steeds de eerste pixel genomen wordt. var L9_first_red = L9_sortedCC . reduce ( ee . Reducer . first ()); //Bekijk de eigenschappen van het gereduceerd beeld print ( L9_first_red ) var visParams_first = { bands : [ 'SR_B4_first' , 'SR_B3_first' , 'SR_B2_first' ], min : 0 , max : 0.3 , gamma : 1.4 , }; // Visualiseren als een normale kleurencomposiet Map . addLayer ( L9_first_red , visParams_first , 'L9_First pixels' ) Bandbenaming na reducing Let ook, bij het aanroepen van ee.reducer , worden ook de banden hernoemd. Houd hier rekening mee bij het visualiseren. Het eventueel hernoemen van banden kan via de functie .rename() Bandnamen bij de 'First'-gereduceerde collectie. ee.Reducer.first() VS .first() In een eerdere oefening namen we reeds het eerste beeld uit een hele collectie met de .first() functie. Dit is dus niet hetzelfde, gezien een reducer zicht niet beperkt tot \u00e9\u00e9n enkel beeld, maar de volledige collectie gaat reduceren.","title":"Over Reducing"},{"location":"P2/P2-Reducing.html#shortcut-syntax","text":"Bepaalde \u2013 veel gebruikte \u2013 reducers hebben ook een zogenaamde \u2018shortcut\u2019 syntax in Earth engine: mean() , median() , min() en sum() kunnen rechtstreeks gebruikt worden. Deze shortcut syntax zorgt ervoor dat een collectie eenvoudiger te reduceren is, zonder de hele .reduce((ee.Reducer.mean()) syntax te moeten gebruiken. Een voorbeeld: //Een Median() Reducer over the Landsat-8 collectie var L9_median = L9 . reduce ( ee . Reducer . median ()); //Of via de short-syntax (geeft zelfde resultaat) var L9_median = L9 . median (); // Visualiseren Map . addLayer ( L9_median , trueColor , 'L9_median' ) Voorbeeld mediane reducer over de L9_sortedCC-collectie","title":"Shortcut syntax"},{"location":"P2/P2-Reducing.html#opdracht-32","text":"Probeer enkele van de Reducers uit op je Sentinel-2 collectie van Gent. Bewaar je script.","title":"Opdracht 3.2"}]}